(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(require('jquery')) :
    typeof define === 'function' && define.amd ? define(['jquery'], factory) :
    (factory(global.$));
}(this, (function ($$1) { 'use strict';

    $$1 = $$1 && $$1.hasOwnProperty('default') ? $$1['default'] : $$1;

    var defaults = {
      pceUrl: '//pce.afd.co.uk/afddata.pce',
      nativeValidationMessages: false,
      defaultCountry: null,
      afdc: 0,
      phone: {
        defaultDialingCode: '+44',
        invalidPhoneNumberMessage: 'Please input a valid phone number',
        loadingSpinner: null,
        countryControl: null,
        countryControlConverter: null
      },
      email: {
        invalidEmailMessage: 'Please input a valid email address',
        loadingSpinner: null
      },
      card: {
        invalidCardNumberMessage: 'Please input a valid card number',
        invalidCardOrExpiryMessage: 'Either the card number or expiry date are not valid',
        invalidExpiryMonthMessage: 'Please input a valid month',
        invalidExpiryDateMessage: 'Please input a valid expiry date',
        loadingSpinner: null,
        logoHeight: 16,
        logoWidth: 24
      },
      account: {
        invalidAccountNumberMessage: 'Please input a valid account number',
        invalidSortCodeMessage: 'Please input a valid Sort Code',
        loadingSpinner: null
      },
      typeahead: {
        maxItems: 5,
        pushUp: false,
        afterHideTypeahead: false,
        searchAgain: true,
        afterClearTypeahead: true,
        beforeHideResults: false,
        parentClass: null,
        fieldSets: [],
        manualInputButton: false,
        fewResultsManualInput: true,
        fewResultsManualInputText: 'Can\'t see your address? Enter it manually',
        notEmptyShowResults: false,
        hideEmpties: false,
        containers: [],
        retrieveFields: 'standard',
        availableCountries: [],
        minLength: 2,
        matchPositions: false,
        postcodeFirst: true,
        hideForCountries: [],
        showForCountries: [],
        containerOnlyContainsControl: false,
        regionMap: null,
        regionAttribute: 'value'
      },
      lookup: {
        prefetch: true,
        pushUp: false,
        beforeHideResults: false,
        parentClass: null,
        fieldSets: [],
        manualInputButton: false,
        hideEmpties: false,
        afterRetrieveHideResultsList: true,
        postcodeIsLookup: false,
        resultsContainer: '',
        containers: [],
        retrieveFields: 'standard',
        availableCountries: [],
        postcodeFirst: true,
        hideForCountries: [],
        showForCountries: [],
        regionMap: null,
        regionAttribute: 'value'
      },
      country: {
        defaultCountry: null,
        availableCountries: [],
        customCountryControl: null,
        customCountryConverter: null
      },
      reverseGeocode: {
        maxItems: 100,
        pushUp: false,
        fieldSets: [],
        hideEmpties: false,
        afterRetrieveHideResultsList: true,
        containers: [],
        retrieveFields: 'standard',
        postcodeFirst: true,
        hideForCountries: [],
        showForCountries: ['GBR'],
        linkedControl: 'typeahead',
        hideOnDesktop: false,
        buttonContainer: null
      }
    };

    function _arrayWithHoles(arr) {
      if (Array.isArray(arr)) return arr;
    }

    var arrayWithHoles = _arrayWithHoles;

    function _iterableToArrayLimit(arr, i) {
      var _arr = [];
      var _n = true;
      var _d = false;
      var _e = undefined;

      try {
        for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
          _arr.push(_s.value);

          if (i && _arr.length === i) break;
        }
      } catch (err) {
        _d = true;
        _e = err;
      } finally {
        try {
          if (!_n && _i["return"] != null) _i["return"]();
        } finally {
          if (_d) throw _e;
        }
      }

      return _arr;
    }

    var iterableToArrayLimit = _iterableToArrayLimit;

    function _nonIterableRest() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance");
    }

    var nonIterableRest = _nonIterableRest;

    function _slicedToArray(arr, i) {
      return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();
    }

    var slicedToArray = _slicedToArray;

    var _isObject = function (it) {
      return typeof it === 'object' ? it !== null : typeof it === 'function';
    };

    var _anObject = function (it) {
      if (!_isObject(it)) throw TypeError(it + ' is not an object!');
      return it;
    };

    var _fails = function (exec) {
      try {
        return !!exec();
      } catch (e) {
        return true;
      }
    };

    // Thank's IE8 for his funny defineProperty
    var _descriptors = !_fails(function () {
      return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;
    });

    function createCommonjsModule(fn, module) {
    	return module = { exports: {} }, fn(module, module.exports), module.exports;
    }

    var _global = createCommonjsModule(function (module) {
    // https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
    var global = module.exports = typeof window != 'undefined' && window.Math == Math
      ? window : typeof self != 'undefined' && self.Math == Math ? self
      // eslint-disable-next-line no-new-func
      : Function('return this')();
    if (typeof __g == 'number') __g = global; // eslint-disable-line no-undef
    });

    var document$1 = _global.document;
    // typeof document.createElement is 'object' in old IE
    var is = _isObject(document$1) && _isObject(document$1.createElement);
    var _domCreate = function (it) {
      return is ? document$1.createElement(it) : {};
    };

    var _ie8DomDefine = !_descriptors && !_fails(function () {
      return Object.defineProperty(_domCreate('div'), 'a', { get: function () { return 7; } }).a != 7;
    });

    // 7.1.1 ToPrimitive(input [, PreferredType])

    // instead of the ES6 spec version, we didn't implement @@toPrimitive case
    // and the second argument - flag - preferred type is a string
    var _toPrimitive = function (it, S) {
      if (!_isObject(it)) return it;
      var fn, val;
      if (S && typeof (fn = it.toString) == 'function' && !_isObject(val = fn.call(it))) return val;
      if (typeof (fn = it.valueOf) == 'function' && !_isObject(val = fn.call(it))) return val;
      if (!S && typeof (fn = it.toString) == 'function' && !_isObject(val = fn.call(it))) return val;
      throw TypeError("Can't convert object to primitive value");
    };

    var dP = Object.defineProperty;

    var f = _descriptors ? Object.defineProperty : function defineProperty(O, P, Attributes) {
      _anObject(O);
      P = _toPrimitive(P, true);
      _anObject(Attributes);
      if (_ie8DomDefine) try {
        return dP(O, P, Attributes);
      } catch (e) { /* empty */ }
      if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');
      if ('value' in Attributes) O[P] = Attributes.value;
      return O;
    };

    var _objectDp = {
    	f: f
    };

    var _propertyDesc = function (bitmap, value) {
      return {
        enumerable: !(bitmap & 1),
        configurable: !(bitmap & 2),
        writable: !(bitmap & 4),
        value: value
      };
    };

    var _hide = _descriptors ? function (object, key, value) {
      return _objectDp.f(object, key, _propertyDesc(1, value));
    } : function (object, key, value) {
      object[key] = value;
      return object;
    };

    var hasOwnProperty = {}.hasOwnProperty;
    var _has = function (it, key) {
      return hasOwnProperty.call(it, key);
    };

    var id = 0;
    var px = Math.random();
    var _uid = function (key) {
      return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));
    };

    var _core = createCommonjsModule(function (module) {
    var core = module.exports = { version: '2.5.7' };
    if (typeof __e == 'number') __e = core; // eslint-disable-line no-undef
    });
    var _core_1 = _core.version;

    var _redefine = createCommonjsModule(function (module) {
    var SRC = _uid('src');
    var TO_STRING = 'toString';
    var $toString = Function[TO_STRING];
    var TPL = ('' + $toString).split(TO_STRING);

    _core.inspectSource = function (it) {
      return $toString.call(it);
    };

    (module.exports = function (O, key, val, safe) {
      var isFunction = typeof val == 'function';
      if (isFunction) _has(val, 'name') || _hide(val, 'name', key);
      if (O[key] === val) return;
      if (isFunction) _has(val, SRC) || _hide(val, SRC, O[key] ? '' + O[key] : TPL.join(String(key)));
      if (O === _global) {
        O[key] = val;
      } else if (!safe) {
        delete O[key];
        _hide(O, key, val);
      } else if (O[key]) {
        O[key] = val;
      } else {
        _hide(O, key, val);
      }
    // add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative
    })(Function.prototype, TO_STRING, function toString() {
      return typeof this == 'function' && this[SRC] || $toString.call(this);
    });
    });

    // 7.2.1 RequireObjectCoercible(argument)
    var _defined = function (it) {
      if (it == undefined) throw TypeError("Can't call method on  " + it);
      return it;
    };

    var _library = false;

    var _shared = createCommonjsModule(function (module) {
    var SHARED = '__core-js_shared__';
    var store = _global[SHARED] || (_global[SHARED] = {});

    (module.exports = function (key, value) {
      return store[key] || (store[key] = value !== undefined ? value : {});
    })('versions', []).push({
      version: _core.version,
      mode: 'global',
      copyright: 'Â© 2018 Denis Pushkarev (zloirock.ru)'
    });
    });

    var _wks = createCommonjsModule(function (module) {
    var store = _shared('wks');

    var Symbol = _global.Symbol;
    var USE_SYMBOL = typeof Symbol == 'function';

    var $exports = module.exports = function (name) {
      return store[name] || (store[name] =
        USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : _uid)('Symbol.' + name));
    };

    $exports.store = store;
    });

    var _fixReWks = function (KEY, length, exec) {
      var SYMBOL = _wks(KEY);
      var fns = exec(_defined, SYMBOL, ''[KEY]);
      var strfn = fns[0];
      var rxfn = fns[1];
      if (_fails(function () {
        var O = {};
        O[SYMBOL] = function () { return 7; };
        return ''[KEY](O) != 7;
      })) {
        _redefine(String.prototype, KEY, strfn);
        _hide(RegExp.prototype, SYMBOL, length == 2
          // 21.2.5.8 RegExp.prototype[@@replace](string, replaceValue)
          // 21.2.5.11 RegExp.prototype[@@split](string, limit)
          ? function (string, arg) { return rxfn.call(string, this, arg); }
          // 21.2.5.6 RegExp.prototype[@@match](string)
          // 21.2.5.9 RegExp.prototype[@@search](string)
          : function (string) { return rxfn.call(string, this); }
        );
      }
    };

    // @@replace logic
    _fixReWks('replace', 2, function (defined, REPLACE, $replace) {
      // 21.1.3.14 String.prototype.replace(searchValue, replaceValue)
      return [function replace(searchValue, replaceValue) {
        var O = defined(this);
        var fn = searchValue == undefined ? undefined : searchValue[REPLACE];
        return fn !== undefined
          ? fn.call(searchValue, O, replaceValue)
          : $replace.call(String(O), searchValue, replaceValue);
      }, $replace];
    });

    var _aFunction = function (it) {
      if (typeof it != 'function') throw TypeError(it + ' is not a function!');
      return it;
    };

    // optional / simple context binding

    var _ctx = function (fn, that, length) {
      _aFunction(fn);
      if (that === undefined) return fn;
      switch (length) {
        case 1: return function (a) {
          return fn.call(that, a);
        };
        case 2: return function (a, b) {
          return fn.call(that, a, b);
        };
        case 3: return function (a, b, c) {
          return fn.call(that, a, b, c);
        };
      }
      return function (/* ...args */) {
        return fn.apply(that, arguments);
      };
    };

    var PROTOTYPE = 'prototype';

    var $export = function (type, name, source) {
      var IS_FORCED = type & $export.F;
      var IS_GLOBAL = type & $export.G;
      var IS_STATIC = type & $export.S;
      var IS_PROTO = type & $export.P;
      var IS_BIND = type & $export.B;
      var target = IS_GLOBAL ? _global : IS_STATIC ? _global[name] || (_global[name] = {}) : (_global[name] || {})[PROTOTYPE];
      var exports = IS_GLOBAL ? _core : _core[name] || (_core[name] = {});
      var expProto = exports[PROTOTYPE] || (exports[PROTOTYPE] = {});
      var key, own, out, exp;
      if (IS_GLOBAL) source = name;
      for (key in source) {
        // contains in native
        own = !IS_FORCED && target && target[key] !== undefined;
        // export native or passed
        out = (own ? target : source)[key];
        // bind timers to global for call from export context
        exp = IS_BIND && own ? _ctx(out, _global) : IS_PROTO && typeof out == 'function' ? _ctx(Function.call, out) : out;
        // extend global
        if (target) _redefine(target, key, out, type & $export.U);
        // export
        if (exports[key] != out) _hide(exports, key, exp);
        if (IS_PROTO && expProto[key] != out) expProto[key] = out;
      }
    };
    _global.core = _core;
    // type bitmap
    $export.F = 1;   // forced
    $export.G = 2;   // global
    $export.S = 4;   // static
    $export.P = 8;   // proto
    $export.B = 16;  // bind
    $export.W = 32;  // wrap
    $export.U = 64;  // safe
    $export.R = 128; // real proto method for `library`
    var _export = $export;

    var toString = {}.toString;

    var _cof = function (it) {
      return toString.call(it).slice(8, -1);
    };

    // fallback for non-array-like ES3 and non-enumerable old V8 strings

    // eslint-disable-next-line no-prototype-builtins
    var _iobject = Object('z').propertyIsEnumerable(0) ? Object : function (it) {
      return _cof(it) == 'String' ? it.split('') : Object(it);
    };

    // 7.1.13 ToObject(argument)

    var _toObject = function (it) {
      return Object(_defined(it));
    };

    // 7.1.4 ToInteger
    var ceil = Math.ceil;
    var floor = Math.floor;
    var _toInteger = function (it) {
      return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);
    };

    // 7.1.15 ToLength

    var min = Math.min;
    var _toLength = function (it) {
      return it > 0 ? min(_toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991
    };

    // 7.2.2 IsArray(argument)

    var _isArray = Array.isArray || function isArray(arg) {
      return _cof(arg) == 'Array';
    };

    var SPECIES = _wks('species');

    var _arraySpeciesConstructor = function (original) {
      var C;
      if (_isArray(original)) {
        C = original.constructor;
        // cross-realm fallback
        if (typeof C == 'function' && (C === Array || _isArray(C.prototype))) C = undefined;
        if (_isObject(C)) {
          C = C[SPECIES];
          if (C === null) C = undefined;
        }
      } return C === undefined ? Array : C;
    };

    // 9.4.2.3 ArraySpeciesCreate(originalArray, length)


    var _arraySpeciesCreate = function (original, length) {
      return new (_arraySpeciesConstructor(original))(length);
    };

    // 0 -> Array#forEach
    // 1 -> Array#map
    // 2 -> Array#filter
    // 3 -> Array#some
    // 4 -> Array#every
    // 5 -> Array#find
    // 6 -> Array#findIndex





    var _arrayMethods = function (TYPE, $create) {
      var IS_MAP = TYPE == 1;
      var IS_FILTER = TYPE == 2;
      var IS_SOME = TYPE == 3;
      var IS_EVERY = TYPE == 4;
      var IS_FIND_INDEX = TYPE == 6;
      var NO_HOLES = TYPE == 5 || IS_FIND_INDEX;
      var create = $create || _arraySpeciesCreate;
      return function ($this, callbackfn, that) {
        var O = _toObject($this);
        var self = _iobject(O);
        var f = _ctx(callbackfn, that, 3);
        var length = _toLength(self.length);
        var index = 0;
        var result = IS_MAP ? create($this, length) : IS_FILTER ? create($this, 0) : undefined;
        var val, res;
        for (;length > index; index++) if (NO_HOLES || index in self) {
          val = self[index];
          res = f(val, index, O);
          if (TYPE) {
            if (IS_MAP) result[index] = res;   // map
            else if (res) switch (TYPE) {
              case 3: return true;             // some
              case 5: return val;              // find
              case 6: return index;            // findIndex
              case 2: result.push(val);        // filter
            } else if (IS_EVERY) return false; // every
          }
        }
        return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : result;
      };
    };

    // 22.1.3.31 Array.prototype[@@unscopables]
    var UNSCOPABLES = _wks('unscopables');
    var ArrayProto = Array.prototype;
    if (ArrayProto[UNSCOPABLES] == undefined) _hide(ArrayProto, UNSCOPABLES, {});
    var _addToUnscopables = function (key) {
      ArrayProto[UNSCOPABLES][key] = true;
    };

    // 22.1.3.8 Array.prototype.find(predicate, thisArg = undefined)

    var $find = _arrayMethods(5);
    var KEY = 'find';
    var forced = true;
    // Shouldn't skip holes
    if (KEY in []) Array(1)[KEY](function () { forced = false; });
    _export(_export.P + _export.F * forced, 'Array', {
      find: function find(callbackfn /* , that = undefined */) {
        return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
      }
    });
    _addToUnscopables(KEY);

    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }

    var classCallCheck = _classCallCheck;

    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor) descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }

    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps) _defineProperties(Constructor.prototype, protoProps);
      if (staticProps) _defineProperties(Constructor, staticProps);
      return Constructor;
    }

    var createClass = _createClass;

    var _typeof_1 = createCommonjsModule(function (module) {
    function _typeof2(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof2(obj); }

    function _typeof(obj) {
      if (typeof Symbol === "function" && _typeof2(Symbol.iterator) === "symbol") {
        module.exports = _typeof = function _typeof(obj) {
          return _typeof2(obj);
        };
      } else {
        module.exports = _typeof = function _typeof(obj) {
          return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : _typeof2(obj);
        };
      }

      return _typeof(obj);
    }

    module.exports = _typeof;
    });

    function _assertThisInitialized(self) {
      if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }

      return self;
    }

    var assertThisInitialized = _assertThisInitialized;

    function _possibleConstructorReturn(self, call) {
      if (call && (_typeof_1(call) === "object" || typeof call === "function")) {
        return call;
      }

      return assertThisInitialized(self);
    }

    var possibleConstructorReturn = _possibleConstructorReturn;

    var getPrototypeOf = createCommonjsModule(function (module) {
    function _getPrototypeOf(o) {
      module.exports = _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
        return o.__proto__ || Object.getPrototypeOf(o);
      };
      return _getPrototypeOf(o);
    }

    module.exports = _getPrototypeOf;
    });

    var setPrototypeOf = createCommonjsModule(function (module) {
    function _setPrototypeOf(o, p) {
      module.exports = _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
        o.__proto__ = p;
        return o;
      };

      return _setPrototypeOf(o, p);
    }

    module.exports = _setPrototypeOf;
    });

    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }

      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      if (superClass) setPrototypeOf(subClass, superClass);
    }

    var inherits = _inherits;

    function _defineProperty(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, {
          value: value,
          enumerable: true,
          configurable: true,
          writable: true
        });
      } else {
        obj[key] = value;
      }

      return obj;
    }

    var defineProperty = _defineProperty;

    /*
     * Luhn algorithm implementation in JavaScript
     * Copyright (c) 2009 Nicholas C. Zakas
     *
     * Permission is hereby granted, free of charge, to any person obtaining a copy
     * of this software and associated documentation files (the "Software"), to deal
     * in the Software without restriction, including without limitation the rights
     * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
     * copies of the Software, and to permit persons to whom the Software is
     * furnished to do so, subject to the following conditions:
     *
     * The above copyright notice and this permission notice shall be included in
     * all copies or substantial portions of the Software.
     *
     * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
     * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
     * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
     * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
     * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
     * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
     * THE SOFTWARE.
     */

    function luhn10(identifier) {
      var sum = 0;
      var alt = false;
      var i = identifier.length - 1;
      var num;

      while (i >= 0) {
        num = parseInt(identifier.charAt(i), 10);

        if (alt) {
          num *= 2;
          if (num > 9) {
            num = (num % 10) + 1; // eslint-disable-line no-extra-parens
          }
        }

        alt = !alt;

        sum += num;

        i--;
      }

      return sum % 10 === 0;
    }

    var luhn10_1 = luhn10;

    var testOrder;
    var types = {};
    var customCards = {};
    var VISA = 'visa';
    var MASTERCARD = 'mastercard';
    var AMERICAN_EXPRESS = 'american-express';
    var DINERS_CLUB = 'diners-club';
    var DISCOVER = 'discover';
    var ELO = 'elo';
    var JCB = 'jcb';
    var UNIONPAY = 'unionpay';
    var MAESTRO = 'maestro';
    var MIR = 'mir';
    var CVV = 'CVV';
    var CID = 'CID';
    var CVC = 'CVC';
    var CVN = 'CVN';
    var CVP2 = 'CVP2';
    var CVE = 'CVE';
    var ORIGINAL_TEST_ORDER = [
      VISA,
      MASTERCARD,
      AMERICAN_EXPRESS,
      DINERS_CLUB,
      DISCOVER,
      JCB,
      UNIONPAY,
      MAESTRO,
      ELO,
      MIR
    ];

    function clone(originalObject, persistPatterns) {
      var dupe, prefixPattern, exactPattern;

      if (!originalObject) { return null; }

      prefixPattern = originalObject.prefixPattern;
      exactPattern = originalObject.exactPattern;
      dupe = JSON.parse(JSON.stringify(originalObject));

      if (persistPatterns) {
        dupe.prefixPattern = prefixPattern;
        dupe.exactPattern = exactPattern;
      } else {
        delete dupe.prefixPattern;
        delete dupe.exactPattern;
      }

      return dupe;
    }

    testOrder = clone(ORIGINAL_TEST_ORDER);

    types[VISA] = {
      niceType: 'Visa',
      type: VISA,
      prefixPattern: /^4/,
      exactPattern: new RegExp('^' +
        '4' +
        '(?!' +
          '31274|51416|57393|0117[89]|38935|5763[12]' + // Elo cards
        ')\\d{5,}' +
      '$'),
      gaps: [4, 8, 12],
      lengths: [16, 18, 19],
      code: {
        name: CVV,
        size: 3
      }
    };

    types[MASTERCARD] = {
      niceType: 'Mastercard',
      type: MASTERCARD,
      prefixPattern: /^(5|5[1-5]|2|22|222|222[1-9]|2[3-6]|27|27[0-2]|2720)$/,
      exactPattern: /^(5[1-5]|222[1-9]|22[3-9]|2[3-6]|27[0-1]|2720)\d*$/,
      gaps: [4, 8, 12],
      lengths: [16],
      code: {
        name: CVC,
        size: 3
      }
    };

    types[AMERICAN_EXPRESS] = {
      niceType: 'American Express',
      type: AMERICAN_EXPRESS,
      prefixPattern: /^(3|34|37)$/,
      exactPattern: /^3[47]\d*$/,
      isAmex: true,
      gaps: [4, 10],
      lengths: [15],
      code: {
        name: CID,
        size: 4
      }
    };

    types[DINERS_CLUB] = {
      niceType: 'Diners Club',
      type: DINERS_CLUB,
      prefixPattern: /^(3|3[0689]|30[0-5])$/,
      exactPattern: /^3(0[0-5]|[689])\d*$/,
      gaps: [4, 10],
      lengths: [14, 16, 19],
      code: {
        name: CVV,
        size: 3
      }
    };

    types[DISCOVER] = {
      niceType: 'Discover',
      type: DISCOVER,
      prefixPattern: /^(6|60|601|6011|65|65\d{1,4}|64|64[4-9])$/,
      exactPattern: new RegExp('^(' +
        '6011' +
        '|' +
        '65' +
          '(?!' + // Elo cards
            '003[1-3]' +
            '|' +
            '003[5-9]|004\\d|005[0-1]' +
            '|' +
            '040[5-9]|04[1-3]\\d' +
            '|' +
            '048[5-9]|049\\d|05[0-2]\\d|053[0-8]' +
            '|' +
            '054[1-9]|05[5-8]\\d|059[0-8]' +
            '|' +
            '070\\d|071[0-8]' +
            '|' +
            '072[0-7]' +
            '|' +
            '090[1-9]|09[1-6]\\d|097[0-8]' +
            '|' +
            '165[2-9]|16[6-7]\\d' +
            '|' +
            '50[0-1]\\d' +
            '|' +
            '502[1-9]|50[3-4]\\d|505[0-8]' +
          ')\\d{4}' +
        '|' +
        '64[4-9]' +
      ')\\d*$'),
      gaps: [4, 8, 12],
      lengths: [16, 19],
      code: {
        name: CID,
        size: 3
      }
    };

    types[JCB] = {
      niceType: 'JCB',
      type: JCB,
      prefixPattern: /^(2|21|213|2131|1|18|180|1800|3|35)$/,
      exactPattern: /^(2131|1800|35)\d*$/,
      gaps: [4, 8, 12],
      lengths: [16, 17, 18, 19],
      code: {
        name: CVV,
        size: 3
      }
    };

    types[UNIONPAY] = {
      niceType: 'UnionPay',
      type: UNIONPAY,
      prefixPattern: /^((6|62|62\d|(621(?!83|88|98|99))|622(?!06)|627[0267]\d?|628(?!0|1)|629[1,2])|622018)$/,
      exactPattern: new RegExp('^(' +
        '(' +
          '620' +
          '|' +
          '(621(?!83|88|98|99))' +
          '|' +
          '622(?!06|018)' +
          '|' +
          '62[3-6]' +
          '|' +
          '627[026]' +
          '|' +
          '6277(?!80)\\d{2}' + // Elo card
          '|' +
          '628(?!0|1)' +
          '|' +
          '629[12]' +
        ')\\d*' +

        '|' +

        '622018\\d{12}' +
      ')$'),
      gaps: [4, 8, 12],
      lengths: [16, 17, 18, 19],
      code: {
        name: CVN,
        size: 3
      }
    };

    types[MAESTRO] = {
      niceType: 'Maestro',
      type: MAESTRO,
      prefixPattern: /^(5|5[06-9]|6\d*)$/,
      exactPattern: new RegExp('^(' +
        '5[6-9]' +
        '|' +
        '50' +
          '(?!' + // Elo card ranges
            '6699|067[0-6][0-9]' +
            '|' +
            '677[0-8]' +
            '|' +
            '9[0-9][0-9][0-9]' +
          ')\\d{4}' +
        '|' +
        '67' +
        '|' +
        '63' +
          '(?!' + // More Elo card ranges
            '6297|6368' +
          ')\\d{4}' +
        ')\\d*$'
      ),
      gaps: [4, 8, 12],
      lengths: [12, 13, 14, 15, 16, 17, 18, 19],
      code: {
        name: CVC,
        size: 3
      }
    };

    types[ELO] = {
      niceType: 'Elo',
      type: ELO,
      prefixPattern: new RegExp('^(' +
        '[4-6]' +

        '|' +

        '4[035]|4[035]1' +
        '|' +
        '4011|40117|40117[89]' +
        '|' +
        '4312|43127|431274' +
        '|' +
        '438|4389|43893|438935' +
        '|' +
        '4514|45141|451416' +
        '|' +
        '457|457[36]|45739|45763|457393|45763[12]' +

        '|' +

        '50|50[69]' +
        '|' +
        '506[6-7]|50669|5067[0-7]|5067[0-6][0-9]|50677[0-8]' +
        '|' +
        '509[0-9]|509[0-9][0-9]|509[0-9][0-9][0-9]' +

        '|' +

        '6[235]|627|636|65[015]' +
        '|' +
        '6277|62778|627780' +
        '|' +
        '636[23]|63629|636297|63636|636368' +
        '|' +
        '650[0479]' +
        '|' +
        '6500[3-5]|65003[1-3]|65003[5-9]|65004[0-9]65005[01]' +
        '|' +
        '6504[0-3]|65040[5-9]|65041[0-9]' +
        '|' +
        '6505[4-9]|65054[1-9]|6505[5-8][0-9]|65059[0-8]' +
        '|' +
        '6507[0-2]|65070[0-9]|65071[0-8]|65072[0-7]' +
        '|' +
        '6509[0-7]|65090[1-9]|6509[1-6][0-9]|65097[0-8]' +
        '|' +
        '6516|6516[5-7]|65165[2-9]|6516[6-7][0-9]' +
        '|' +
        '6550|6550[0-5]|6550[01][0-9]|65502[1-9]|6550[3-4][0-9]|65505[0-8]' +
      ')$'),
      exactPattern: new RegExp('^(' +
        // Elo only ranges
        '4(31274|51416|57393)' +

        '|' +

        '50(' +
          '4175' +
          '|' +
          '6699|67[0-6][0-9]|677[0-8]' + // 506699-506778
          '|' +
          '9[0-9][0-9][0-9]' + // 509000-509999
        ')' +

        '|' +

        '627780' +

        '|' +

        '636(297|368)' +

        '|' +

        // Dual Branded with Visa
        '4(0117[89]|38935|5763[12])' +

        '|' +

        // Dual Branded with Discover
        '65(' +
          '003[1-3]' + // 650031-650033
          '|' +
          '003[5-9]|004\\d|005[0-1]' + // 650035-650051
          '|' +
          '040[5-9]|04[1-3]\\d' + // 650405-650439
          '|' +
          '048[5-9]|049\\d|05[0-2]\\d|053[0-8]' + // 650485-650538
          '|' +
          '054[1-9]|05[5-8]\\d|059[0-8]' + // 650541-650598
          '|' +
          '070[0-9]|071[0-8]' + // 650700-650718
          '|' +
          '072[0-7]' + // 650720-650727
          '|' +
          '090[1-9]|09[1-6][0-9]|097[0-8]' + // 650901-650978
          '|' +
          '165[2-9]|16[6-7][0-9]' + // 651652-651679
          '|' +
          '50[0-1][0-9]' + // 655000-655019
          '|' +
          '502[1-9]|50[3-4][0-9]|505[0-8]' + // 655021-655058
        ')' +
      ')\\d*$'),
      gaps: [4, 8, 12],
      lengths: [16],
      code: {
        name: CVE,
        size: 3
      }
    };

    types[MIR] = {
      niceType: 'Mir',
      type: MIR,
      prefixPattern: /^(2|22|220|220[0-4])$/,
      exactPattern: /^(220[0-4])\d*$/,
      gaps: [4, 8, 12],
      lengths: [16, 17, 18, 19],
      code: {
        name: CVP2,
        size: 3
      }
    };

    function findType(type) {
      return customCards[type] || types[type];
    }

    function creditCardType(cardNumber) {
      var type, value, i;
      var prefixResults = [];
      var exactResults = [];

      if (!(typeof cardNumber === 'string' || cardNumber instanceof String)) {
        return [];
      }

      for (i = 0; i < testOrder.length; i++) {
        type = testOrder[i];
        value = findType(type);

        if (cardNumber.length === 0) {
          prefixResults.push(clone(value));
          continue;
        }

        if (value.exactPattern.test(cardNumber)) {
          exactResults.push(clone(value));
        } else if (value.prefixPattern.test(cardNumber)) {
          prefixResults.push(clone(value));
        }
      }

      return exactResults.length ? exactResults : prefixResults;
    }

    creditCardType.getTypeInfo = function (type) {
      return clone(findType(type));
    };

    function getCardPosition(name, ignoreErrorForNotExisting) {
      var position = testOrder.indexOf(name);

      if (!ignoreErrorForNotExisting && position === -1) {
        throw new Error('"' + name + '" is not a supported card type.');
      }

      return position;
    }

    creditCardType.removeCard = function (name) {
      var position = getCardPosition(name);

      testOrder.splice(position, 1);
    };

    creditCardType.addCard = function (config) {
      var existingCardPosition = getCardPosition(config.type, true);

      customCards[config.type] = config;

      if (existingCardPosition === -1) {
        testOrder.push(config.type);
      }
    };

    creditCardType.updateCard = function (cardType, updates) {
      var clonedCard;
      var originalObject = customCards[cardType] || types[cardType];

      if (!originalObject) {
        throw new Error('"' + cardType + '" is not a recognized type. Use `addCard` instead.');
      }

      if (updates.type && originalObject.type !== updates.type) {
        throw new Error('Cannot overwrite type parameter.');
      }

      clonedCard = clone(originalObject, true);

      Object.keys(clonedCard).forEach(function (key) {
        if (updates[key]) {
          clonedCard[key] = updates[key];
        }
      });

      customCards[clonedCard.type] = clonedCard;
    };

    creditCardType.changeOrder = function (name, position) {
      var currentPosition = getCardPosition(name);

      testOrder.splice(currentPosition, 1);
      testOrder.splice(position, 0, name);
    };

    creditCardType.resetModifications = function () {
      testOrder = clone(ORIGINAL_TEST_ORDER);
      customCards = {};
    };

    creditCardType.types = {
      VISA: VISA,
      MASTERCARD: MASTERCARD,
      AMERICAN_EXPRESS: AMERICAN_EXPRESS,
      DINERS_CLUB: DINERS_CLUB,
      DISCOVER: DISCOVER,
      JCB: JCB,
      UNIONPAY: UNIONPAY,
      MAESTRO: MAESTRO,
      ELO: ELO,
      MIR: MIR
    };

    var creditCardType_1 = creditCardType;

    function verification(card, isPotentiallyValid, isValid) {
      return {card: card, isPotentiallyValid: isPotentiallyValid, isValid: isValid};
    }

    function cardNumber(value) {
      var potentialTypes, cardType, isPotentiallyValid, isValid, i, maxLength;

      if (typeof value === 'number') {
        value = String(value);
      }

      if (typeof value !== 'string') { return verification(null, false, false); }

      value = value.replace(/\-|\s/g, '');

      if (!/^\d*$/.test(value)) { return verification(null, false, false); }

      potentialTypes = creditCardType_1(value);

      if (potentialTypes.length === 0) {
        return verification(null, false, false);
      } else if (potentialTypes.length !== 1) {
        return verification(null, true, false);
      }

      cardType = potentialTypes[0];

      if (cardType.type === 'unionpay') {  // UnionPay is not Luhn 10 compliant
        isValid = true;
      } else {
        isValid = luhn10_1(value);
      }

      maxLength = Math.max.apply(null, cardType.lengths);

      for (i = 0; i < cardType.lengths.length; i++) {
        if (cardType.lengths[i] === value.length) {
          isPotentiallyValid = value.length !== maxLength || isValid;
          return verification(cardType, isPotentiallyValid, isValid);
        }
      }

      return verification(cardType, value.length < maxLength, false);
    }

    var cardNumber_1 = cardNumber;

    var DEFAULT_VALID_NUMBER_OF_YEARS_IN_THE_FUTURE = 19;

    function verification$1(isValid, isPotentiallyValid, isCurrentYear) {
      return {
        isValid: isValid,
        isPotentiallyValid: isPotentiallyValid,
        isCurrentYear: isCurrentYear || false
      };
    }

    function expirationYear(value, maxElapsedYear) {
      var currentFirstTwo, currentYear, firstTwo, len, twoDigitYear, valid, isCurrentYear;

      maxElapsedYear = maxElapsedYear || DEFAULT_VALID_NUMBER_OF_YEARS_IN_THE_FUTURE;

      if (typeof value !== 'string') {
        return verification$1(false, false);
      }
      if (value.replace(/\s/g, '') === '') {
        return verification$1(false, true);
      }
      if (!/^\d*$/.test(value)) {
        return verification$1(false, false);
      }

      len = value.length;

      if (len < 2) {
        return verification$1(false, true);
      }

      currentYear = new Date().getFullYear();

      if (len === 3) {
        // 20x === 20x
        firstTwo = value.slice(0, 2);
        currentFirstTwo = String(currentYear).slice(0, 2);
        return verification$1(false, firstTwo === currentFirstTwo);
      }

      if (len > 4) {
        return verification$1(false, false);
      }

      value = parseInt(value, 10);
      twoDigitYear = Number(String(currentYear).substr(2, 2));

      if (len === 2) {
        isCurrentYear = twoDigitYear === value;
        valid = value >= twoDigitYear && value <= twoDigitYear + maxElapsedYear;
      } else if (len === 4) {
        isCurrentYear = currentYear === value;
        valid = value >= currentYear && value <= currentYear + maxElapsedYear;
      }

      return verification$1(valid, valid, isCurrentYear);
    }

    var expirationYear_1 = expirationYear;

    // Polyfill taken from <https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/isArray#Polyfill>.

    var isArray = Array.isArray || function (arg) {
      return Object.prototype.toString.call(arg) === '[object Array]';
    };

    function parseDate(value) {
      var month, len, year, yearValid;

      if (/\//.test(value)) {
        value = value.split(/\s*\/\s*/g);
      } else if (/\s/.test(value)) {
        value = value.split(/ +/g);
      }

      if (isArray(value)) {
        return {
          month: value[0],
          year: value.slice(1).join()
        };
      }

      len = value[0] === '0' || value.length > 5 ? 2 : 1;

      if (value[0] === '1') {
        year = value.substr(1);
        yearValid = expirationYear_1(year);
        if (!yearValid.isPotentiallyValid) {
          len = 2;
        }
      }

      month = value.substr(0, len);

      return {
        month: month,
        year: value.substr(month.length)
      };
    }

    var parseDate_1 = parseDate;

    function verification$2(isValid, isPotentiallyValid, isValidForThisYear) {
      return {
        isValid: isValid,
        isPotentiallyValid: isPotentiallyValid,
        isValidForThisYear: isValidForThisYear || false
      };
    }

    function expirationMonth(value) {
      var month, result;
      var currentMonth = new Date().getMonth() + 1;

      if (typeof value !== 'string') {
        return verification$2(false, false);
      }
      if (value.replace(/\s/g, '') === '' || value === '0') {
        return verification$2(false, true);
      }
      if (!/^\d*$/.test(value)) {
        return verification$2(false, false);
      }

      month = parseInt(value, 10);

      if (isNaN(value)) {
        return verification$2(false, false);
      }

      result = month > 0 && month < 13;

      return verification$2(result, result, result && month >= currentMonth);
    }

    var expirationMonth_1 = expirationMonth;

    function verification$3(isValid, isPotentiallyValid, month, year) {
      return {
        isValid: isValid,
        isPotentiallyValid: isPotentiallyValid,
        month: month,
        year: year
      };
    }

    function expirationDate(value, maxElapsedYear) {
      var date, monthValid, yearValid, isValidForThisYear;

      if (typeof value === 'string') {
        value = value.replace(/^(\d\d) (\d\d(\d\d)?)$/, '$1/$2');
        date = parseDate_1(value);
      } else if (value !== null && typeof value === 'object') {
        date = {
          month: String(value.month),
          year: String(value.year)
        };
      } else {
        return verification$3(false, false, null, null);
      }

      monthValid = expirationMonth_1(date.month);
      yearValid = expirationYear_1(date.year, maxElapsedYear);

      if (monthValid.isValid) {
        if (yearValid.isCurrentYear) {
          isValidForThisYear = monthValid.isValidForThisYear;
          return verification$3(isValidForThisYear, isValidForThisYear, date.month, date.year);
        }

        if (yearValid.isValid) {
          return verification$3(true, true, date.month, date.year);
        }
      }

      if (monthValid.isPotentiallyValid && yearValid.isPotentiallyValid) {
        return verification$3(false, true, null, null);
      }

      return verification$3(false, false, null, null);
    }

    var expirationDate_1 = expirationDate;

    var DEFAULT_LENGTH = 3;

    function includes(array, thing) {
      var i = 0;

      for (; i < array.length; i++) {
        if (thing === array[i]) { return true; }
      }

      return false;
    }

    function max(array) {
      var maximum = DEFAULT_LENGTH;
      var i = 0;

      for (; i < array.length; i++) {
        maximum = array[i] > maximum ? array[i] : maximum;
      }

      return maximum;
    }

    function verification$4(isValid, isPotentiallyValid) {
      return {isValid: isValid, isPotentiallyValid: isPotentiallyValid};
    }

    function cvv(value, maxLength) {
      maxLength = maxLength || DEFAULT_LENGTH;
      maxLength = maxLength instanceof Array ? maxLength : [maxLength];

      if (typeof value !== 'string') { return verification$4(false, false); }
      if (!/^\d*$/.test(value)) { return verification$4(false, false); }
      if (includes(maxLength, value.length)) { return verification$4(true, true); }
      if (value.length < Math.min.apply(null, maxLength)) { return verification$4(false, true); }
      if (value.length > max(maxLength)) { return verification$4(false, false); }

      return verification$4(true, true);
    }

    var cvv_1 = cvv;

    var DEFAULT_MIN_POSTAL_CODE_LENGTH = 3;

    function verification$5(isValid, isPotentiallyValid) {
      return {isValid: isValid, isPotentiallyValid: isPotentiallyValid};
    }

    function postalCode(value, options) {
      var minLength;

      options = options || {};

      minLength = options.minLength || DEFAULT_MIN_POSTAL_CODE_LENGTH;

      if (typeof value !== 'string') {
        return verification$5(false, false);
      } else if (value.length < minLength) {
        return verification$5(false, true);
      }

      return verification$5(true, true);
    }

    var postalCode_1 = postalCode;

    var cardValidator = {
      number: cardNumber_1,
      expirationDate: expirationDate_1,
      expirationMonth: expirationMonth_1,
      expirationYear: expirationYear_1,
      cvv: cvv_1,
      postalCode: postalCode_1,
      creditCardType: creditCardType_1
    };
    var cardValidator_1 = cardValidator.number;
    var cardValidator_2 = cardValidator.expirationDate;
    var cardValidator_3 = cardValidator.expirationMonth;

    var AfdControl = function AfdControl($el, options) {
      var _this = this;

      classCallCheck(this, AfdControl);

      defineProperty(this, "setupParams", function (requestOptions) {
        var defaultData = {
          format: 'json'
        };

        if (_this.options.serial && _this.options.password) {
          defaultData.serial = _this.options.serial;
          defaultData.password = _this.options.password;
        } else if (_this.options.token && _this.options.id) {
          defaultData.token = _this.options.token;
          defaultData.id = _this.options.id;
        } else {
          throw 'You must either supply password and serial, or token and id';
        } // reverseGeocode should not have a country ISO set


        if (_this.controlType !== 'reverseGeocode') {
          // check to see if default country
          if (_this.options.defaultCountry) {
            defaultData.countryiso = _this.options.defaultCountry;
          }

          if (_this.options.country.defaultCountry) {
            defaultData.countryiso = _this.options.country.defaultCountry;
          } // Check to see if there is a country control, if so WA will be activated


          var $countryField = $('[data-afd-control="country"]');

          if ($countryField.length > 0) {
            defaultData.countryiso = $countryField.val();
          } // checks to see if there is a custom country control and whether or not a function is supplied to turn the value into ISO3


          if (_this.options.country.customCountryControl) {
            var customCountryControl = $(_this.options.country.customCountryControl);

            if (_this.options.country.customCountryConverter) {
              if (typeof _this.options.country.customCountryConverter !== 'function') {
                throw 'customCountryConverter Must be a function';
              }

              defaultData.countryiso = _this.options.country.customCountryConverter(customCountryControl.val());
            } else {
              defaultData.countryiso = customCountryControl.val();
            }
          }
        }

        try {
          return {
            method: 'GET',
            url: _this.options.pceUrl,
            error: function error(err, errText, errThrown) {
              console.log(err);
              console.log(errText);
              console.log(errThrown);
              $(document).trigger('afd:pceError', err);
            },
            data: $.extend(true, {}, defaultData, requestOptions),
            // callback and beforesend are only applicable when the request sequence module is used
            callback: typeof _this.requestCallback !== 'undefined' ? {
              done: _this.requestCallback
            } : null,
            beforeSend: typeof _this.beforeSend !== 'undefined' ? _this.beforeSend : null
          };
        } catch (err) {
          console.error('Error setting up request');
          console.error(err);
        }
      });

      defineProperty(this, "eventHandler", function ($element, event, handler) {
        $element.off(event + '.afd').on(event + '.afd', handler);
      });

      this.$element = $el;
      this.element = $el.get()[0];

      if (typeof $el.data('afd-additional-options') !== 'undefined') {
        var customOptions = window[$el.data('afd-additional-options')];
        this.options = $.extend(true, {}, options, customOptions);
      } else {
        this.options = options;
      }
    };

    var afdValidationMixin = function afdValidationMixin(Base) {
      var _temp;

      return _temp =
      /*#__PURE__*/
      function (_Base) {
        inherits(_temp, _Base);

        function _temp() {
          var _getPrototypeOf2;

          var _this;

          classCallCheck(this, _temp);

          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }

          _this = possibleConstructorReturn(this, (_getPrototypeOf2 = getPrototypeOf(_temp)).call.apply(_getPrototypeOf2, [this].concat(args)));

          defineProperty(assertThisInitialized(assertThisInitialized(_this)), "handleInvalid", function (message) {
            var $el = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;
            var element = $el ? $el[0] : _this.$element[0];
            var $element = $el ? $el : _this.$element;
            element.setCustomValidity(message); // If user wants to use browser native validation messages then report the failure now

            if (_this.options.nativeValidationMessages === true) {
              element.reportValidity();
            } // Add afd Invalid class


            $element.removeClass('afd-valid').addClass('afd-invalid'); // Bootstrap 3 Validation

            $element.parent('.form-group').addClass('has-error').removeClass('has-success'); // Bootstrap 4 Validation

            $element.parent().addClass('was-validated');
            $element.siblings('.invalid-feedback').first().html(element.validationMessage); // trigger validation complete event

            $$1(document).trigger('afd:validateComplete', {
              valid: false,
              validationMessage: message
            });
          });

          defineProperty(assertThisInitialized(assertThisInitialized(_this)), "handleValid", function () {
            var $el = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;
            var element = $el ? $el[0] : _this.$element[0];
            var $element = $el ? $el : _this.$element;
            element.setCustomValidity(''); //Add afd Valid class

            $element.addClass('afd-valid').removeClass('afd-invalid'); // Bootstrap 3 Validation

            $element.parent('.form-group').removeClass('has-error').addClass('has-success'); // Bootstrap 4 Validation

            $element.parent().addClass('was-validated');
            $element.siblings('.invalid-feedback').first().html(element.validationMessage); // trigger validation complete event

            $$1(document).trigger('afd:validateComplete', {
              valid: true,
              validationMessage: null
            });
          });

          defineProperty(assertThisInitialized(assertThisInitialized(_this)), "clearValidation", function () {
            var $el = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;
            var element = $el ? $el[0] : _this.$element[0];
            var $element = $el ? $el : _this.$element;
            element.setCustomValidity('');
            $element.parent('.form-group').removeClass('has-error').removeClass('has-success'); // Add afd Invalid class

            $element.removeClass('afd-valid').removeClass('afd-invalid'); // Bootstrap 4 Validation

            $element.parent().removeClass('was-validated');
          });

          defineProperty(assertThisInitialized(assertThisInitialized(_this)), "showLoadingSpinner", function ($element, parentSelector) {
            if (parentSelector) {
              $element.closest(parentSelector).addClass('afd-loading');
            }
          });

          defineProperty(assertThisInitialized(assertThisInitialized(_this)), "hideLoadingSpinner", function ($element, parentSelector) {
            if (parentSelector) {
              $element.closest(parentSelector).removeClass('afd-loading');
            }
          });

          return _this;
        }

        return _temp;
      }(Base), _temp;
    };

    var blankCard = "<svg width=\"750\" height=\"471\" viewBox=\"0 0 750 471\" xmlns=\"http://www.w3.org/2000/svg\"><g fill-rule=\"nonzero\" fill=\"none\"><rect fill=\"#000C9D\" width=\"750\" height=\"471\" rx=\"40\"/><rect fill=\"#9D9400\" x=\"48.71\" y=\"153.576\" width=\"110.324\" height=\"99.679\" rx=\"20.323\"/><g fill=\"#FFF\"><path d=\"M78.102 310.37v-3.795h-5.117v-11.27h-4.198l-.402 11.27H56.942l10.58-25.07-3.967-1.725-11.673 27.14v3.45h16.445v9.66h4.658v-9.66h5.117zM97.688 279.78c-4.025 0-7.878 1.38-11.213 4.6l2.588 2.933c2.645-2.473 5.002-3.68 8.395-3.68 4.197 0 7.532 2.357 7.532 6.727 0 4.773-3.737 6.958-7.532 6.958H95.1l-.575 3.795h3.335c4.658 0 8.223 1.84 8.223 7.532 0 4.945-3.278 8.108-8.855 8.108-3.22 0-6.555-1.323-8.798-3.968l-3.22 2.645c2.99 3.68 7.705 5.233 12.133 5.233 8.165 0 13.742-5.175 13.742-12.018 0-6.152-4.37-9.372-9.027-9.717 4.197-.805 7.762-4.428 7.762-9.2 0-5.405-4.715-9.948-12.132-9.948zM132.165 279.78c-5.347 0-8.912 1.898-12.075 5.693l3.335 2.53c2.53-2.933 4.658-4.198 8.568-4.198 4.427 0 7.072 2.76 7.072 7.188 0 6.497-3.22 10.81-18.17 25.127v3.91h23.518l.575-4.082h-18.63c13.052-11.903 17.71-17.825 17.71-25.07 0-6.325-4.428-11.098-11.903-11.098zM180.903 316.12h-8.28v-35.65h-4.198l-11.73 7.245 2.07 3.393 9.085-5.463v30.475h-9.775v3.91h22.828v-3.91zM250.49 310.37v-3.795h-5.117v-11.27h-4.198l-.402 11.27H229.33l10.58-25.07-3.967-1.725-11.673 27.14v3.45h16.445v9.66h4.658v-9.66h5.117zM270.075 279.78c-4.025 0-7.877 1.38-11.212 4.6l2.587 2.933c2.645-2.473 5.003-3.68 8.395-3.68 4.198 0 7.533 2.357 7.533 6.727 0 4.773-3.738 6.958-7.533 6.958h-2.357l-.575 3.795h3.335c4.657 0 8.222 1.84 8.222 7.532 0 4.945-3.277 8.108-8.855 8.108-3.22 0-6.555-1.323-8.797-3.968l-3.22 2.645c2.99 3.68 7.705 5.233 12.132 5.233 8.165 0 13.743-5.175 13.743-12.018 0-6.152-4.37-9.372-9.028-9.717 4.198-.805 7.763-4.428 7.763-9.2 0-5.405-4.715-9.948-12.133-9.948zM304.553 279.78c-5.348 0-8.913 1.898-12.075 5.693l3.335 2.53c2.53-2.933 4.657-4.198 8.567-4.198 4.428 0 7.073 2.76 7.073 7.188 0 6.497-3.22 10.81-18.17 25.127v3.91H316.8l.575-4.082h-18.63c13.053-11.903 17.71-17.825 17.71-25.07 0-6.325-4.427-11.098-11.902-11.098zM353.29 316.12h-8.28v-35.65h-4.197l-11.73 7.245 2.07 3.393 9.085-5.463v30.475h-9.775v3.91h22.827v-3.91zM422.878 310.37v-3.795h-5.118v-11.27h-4.197l-.403 11.27h-11.442l10.58-25.07-3.968-1.725-11.672 27.14v3.45h16.445v9.66h4.657v-9.66h5.118zM442.463 279.78c-4.025 0-7.878 1.38-11.213 4.6l2.588 2.933c2.645-2.473 5.002-3.68 8.395-3.68 4.197 0 7.532 2.357 7.532 6.727 0 4.773-3.737 6.958-7.532 6.958h-2.358l-.575 3.795h3.335c4.658 0 8.223 1.84 8.223 7.532 0 4.945-3.278 8.108-8.855 8.108-3.22 0-6.555-1.323-8.798-3.968l-3.22 2.645c2.99 3.68 7.705 5.233 12.133 5.233 8.165 0 13.742-5.175 13.742-12.018 0-6.152-4.37-9.372-9.027-9.717 4.197-.805 7.762-4.428 7.762-9.2 0-5.405-4.715-9.948-12.132-9.948zM476.94 279.78c-5.347 0-8.912 1.898-12.075 5.693l3.335 2.53c2.53-2.933 4.658-4.198 8.568-4.198 4.427 0 7.072 2.76 7.072 7.188 0 6.497-3.22 10.81-18.17 25.127v3.91h23.518l.575-4.082h-18.63c13.052-11.903 17.71-17.825 17.71-25.07 0-6.325-4.428-11.098-11.903-11.098zM525.678 316.12h-8.28v-35.65H513.2l-11.73 7.245 2.07 3.393 9.085-5.463v30.475h-9.775v3.91h22.828v-3.91zM595.266 310.37v-3.795h-5.118v-11.27h-4.197l-.403 11.27h-11.442l10.58-25.07-3.968-1.725-11.672 27.14v3.45h16.445v9.66h4.657v-9.66h5.118zM614.85 279.78c-4.024 0-7.877 1.38-11.212 4.6l2.588 2.933c2.645-2.473 5.002-3.68 8.395-3.68 4.197 0 7.532 2.357 7.532 6.727 0 4.773-3.737 6.958-7.532 6.958h-2.358l-.575 3.795h3.335c4.658 0 8.223 1.84 8.223 7.532 0 4.945-3.278 8.108-8.855 8.108-3.22 0-6.555-1.323-8.798-3.968l-3.22 2.645c2.99 3.68 7.705 5.233 12.133 5.233 8.165 0 13.742-5.175 13.742-12.018 0-6.152-4.37-9.372-9.027-9.717 4.197-.805 7.762-4.428 7.762-9.2 0-5.405-4.715-9.948-12.132-9.948zM649.328 279.78c-5.347 0-8.912 1.898-12.075 5.693l3.335 2.53c2.53-2.933 4.658-4.198 8.568-4.198 4.427 0 7.072 2.76 7.072 7.188 0 6.497-3.22 10.81-18.17 25.127v3.91h23.518l.575-4.082h-18.63c13.052-11.903 17.71-17.825 17.71-25.07 0-6.325-4.428-11.098-11.903-11.098zM698.066 316.12h-8.28v-35.65h-4.198l-11.73 7.245 2.07 3.393 9.085-5.463v30.475h-9.775v3.91h22.828v-3.91z\"/></g><g fill=\"#FFF\" fill-opacity=\".784\"><path d=\"M55.607 415.42h6.445v-22.245l-7.012 1.406v-3.594l6.973-1.406h3.945v25.84h6.446v3.32H55.607zM81.075 415.42h6.446v-22.245l-7.012 1.406v-3.594l6.973-1.406h3.945v25.84h6.445v3.32H81.075zM121.993 415.42h13.77v3.321h-18.516v-3.32a762.619 762.619 0 0 1 6.114-6.23c2.59-2.618 4.218-4.304 4.882-5.06 1.263-1.418 2.142-2.616 2.637-3.593.508-.99.762-1.96.762-2.91 0-1.55-.547-2.813-1.64-3.79-1.082-.976-2.494-1.464-4.24-1.464-1.236 0-2.545.215-3.925.645-1.367.43-2.832 1.08-4.394 1.953v-3.985c1.588-.638 3.073-1.12 4.453-1.445 1.38-.326 2.643-.488 3.789-.488 3.02 0 5.43.755 7.226 2.265 1.797 1.51 2.696 3.529 2.696 6.055a8.707 8.707 0 0 1-.684 3.418c-.443 1.068-1.256 2.33-2.441 3.789-.326.378-1.361 1.471-3.106 3.281a2473.283 2473.283 0 0 1-7.383 7.559zM156.017 403.019c1.888.403 3.36 1.243 4.414 2.52 1.068 1.275 1.601 2.85 1.601 4.726 0 2.877-.99 5.104-2.968 6.68-1.98 1.575-4.792 2.363-8.438 2.363-1.224 0-2.487-.124-3.789-.372a26.623 26.623 0 0 1-4.004-1.074v-3.808a13.669 13.669 0 0 0 3.594 1.445 16.77 16.77 0 0 0 4.082.488c2.474 0 4.355-.488 5.645-1.465 1.302-.976 1.953-2.395 1.953-4.257 0-1.72-.606-3.06-1.817-4.024-1.198-.976-2.87-1.465-5.02-1.465h-3.398v-3.242h3.555c1.94 0 3.424-.384 4.453-1.152 1.029-.781 1.543-1.901 1.543-3.36 0-1.497-.534-2.643-1.601-3.437-1.055-.807-2.572-1.211-4.551-1.211-1.081 0-2.24.117-3.477.352-1.237.234-2.597.599-4.082 1.093v-3.515a38.347 38.347 0 0 1 4.2-.938 23.777 23.777 0 0 1 3.71-.312c2.995 0 5.365.683 7.11 2.05 1.744 1.355 2.617 3.19 2.617 5.508 0 1.615-.462 2.982-1.387 4.102-.924 1.107-2.24 1.875-3.945 2.305zM182.306 389.581h15.488v3.32H185.92v7.149a10.371 10.371 0 0 1 1.719-.43 9.59 9.59 0 0 1 1.719-.156c3.255 0 5.833.892 7.734 2.676 1.901 1.783 2.852 4.199 2.852 7.246 0 3.138-.977 5.58-2.93 7.324-1.953 1.732-4.707 2.598-8.262 2.598-1.224 0-2.474-.105-3.75-.313a29.94 29.94 0 0 1-3.926-.937v-3.965a15.373 15.373 0 0 0 3.633 1.426c1.25.312 2.572.468 3.965.468 2.253 0 4.037-.592 5.352-1.777 1.315-1.185 1.972-2.793 1.972-4.824 0-2.032-.657-3.64-1.972-4.825-1.315-1.184-3.1-1.777-5.352-1.777-1.055 0-2.11.117-3.164.352a16.66 16.66 0 0 0-3.203 1.093v-14.648zM216.173 404.894c-1.875 0-3.353.5-4.434 1.503-1.067 1.003-1.601 2.383-1.601 4.141s.534 3.138 1.601 4.14c1.081 1.003 2.56 1.505 4.434 1.505 1.875 0 3.353-.502 4.434-1.504 1.08-1.016 1.62-2.396 1.62-4.14 0-1.759-.54-3.139-1.62-4.142-1.068-1.002-2.546-1.503-4.434-1.503zm-3.945-1.68c-1.693-.417-3.015-1.205-3.965-2.363-.938-1.16-1.406-2.572-1.406-4.239 0-2.33.827-4.173 2.48-5.527 1.667-1.354 3.945-2.031 6.836-2.031 2.904 0 5.182.677 6.836 2.03 1.654 1.355 2.48 3.198 2.48 5.528 0 1.667-.475 3.08-1.425 4.239-.938 1.158-2.246 1.946-3.926 2.363 1.901.443 3.379 1.308 4.434 2.597 1.067 1.29 1.601 2.865 1.601 4.727 0 2.826-.866 4.994-2.598 6.504-1.718 1.51-4.186 2.266-7.402 2.266s-5.69-.756-7.422-2.266c-1.719-1.51-2.578-3.678-2.578-6.504 0-1.862.534-3.437 1.602-4.727 1.067-1.289 2.552-2.154 4.453-2.597zm-1.446-6.23c0 1.51.47 2.688 1.407 3.535.95.846 2.278 1.27 3.984 1.27 1.693 0 3.014-.424 3.965-1.27.963-.847 1.445-2.025 1.445-3.536 0-1.51-.482-2.688-1.445-3.535-.95-.846-2.272-1.27-3.965-1.27-1.706 0-3.034.424-3.984 1.27-.938.847-1.407 2.025-1.407 3.535z\"/></g><g fill=\"#FFF\" fill-opacity=\".784\"><path d=\"M308.836 414.453h6.445v-22.246l-7.011 1.406v-3.593l6.972-1.407h3.946v25.84h6.445v3.32h-16.797zM345.574 402.05c1.888.404 3.36 1.244 4.415 2.52 1.067 1.276 1.601 2.852 1.601 4.727 0 2.877-.99 5.104-2.969 6.68-1.979 1.575-4.791 2.363-8.437 2.363-1.224 0-2.487-.124-3.79-.371a26.623 26.623 0 0 1-4.003-1.074v-3.81a13.669 13.669 0 0 0 3.594 1.446 16.77 16.77 0 0 0 4.082.489c2.474 0 4.355-.489 5.644-1.465 1.302-.977 1.953-2.396 1.953-4.258 0-1.719-.605-3.06-1.816-4.024-1.198-.976-2.871-1.464-5.02-1.464h-3.398v-3.243h3.555c1.94 0 3.424-.384 4.453-1.152 1.028-.781 1.543-1.901 1.543-3.36 0-1.497-.534-2.643-1.602-3.437-1.055-.807-2.571-1.21-4.55-1.21-1.081 0-2.24.116-3.477.35-1.237.235-2.598.6-4.082 1.095v-3.516a38.348 38.348 0 0 1 4.199-.938 23.777 23.777 0 0 1 3.71-.312c2.996 0 5.366.684 7.11 2.05 1.745 1.355 2.617 3.19 2.617 5.509 0 1.614-.462 2.981-1.386 4.101-.925 1.107-2.24 1.875-3.946 2.305zM362.489 414.453h13.77v3.32h-18.517v-3.32a762.755 762.755 0 0 1 6.114-6.23c2.59-2.618 4.218-4.304 4.883-5.059 1.263-1.42 2.141-2.617 2.636-3.594.508-.99.762-1.96.762-2.91 0-1.55-.547-2.812-1.64-3.789-1.081-.976-2.494-1.465-4.239-1.465-1.237 0-2.546.215-3.926.645-1.367.43-2.832 1.08-4.394 1.953v-3.984c1.588-.638 3.073-1.12 4.453-1.446 1.38-.325 2.643-.488 3.789-.488 3.02 0 5.43.755 7.226 2.266 1.797 1.51 2.696 3.528 2.696 6.054a8.707 8.707 0 0 1-.684 3.418c-.442 1.068-1.256 2.33-2.441 3.79-.326.377-1.36 1.47-3.106 3.28a2474.291 2474.291 0 0 1-7.382 7.56zM385.242 414.453h6.446v-22.246l-7.012 1.406v-3.593l6.973-1.407h3.945v25.84h6.445v3.32h-16.797zM434.715 402.05c1.888.404 3.36 1.244 4.414 2.52 1.068 1.276 1.602 2.852 1.602 4.727 0 2.877-.99 5.104-2.969 6.68-1.98 1.575-4.792 2.363-8.438 2.363-1.223 0-2.487-.124-3.789-.371a26.623 26.623 0 0 1-4.004-1.074v-3.81a13.669 13.669 0 0 0 3.594 1.446 16.77 16.77 0 0 0 4.082.489c2.474 0 4.356-.489 5.645-1.465 1.302-.977 1.953-2.396 1.953-4.258 0-1.719-.606-3.06-1.816-4.024-1.198-.976-2.872-1.464-5.02-1.464h-3.398v-3.243h3.554c1.94 0 3.425-.384 4.453-1.152 1.029-.781 1.543-1.901 1.543-3.36 0-1.497-.534-2.643-1.601-3.437-1.055-.807-2.572-1.21-4.551-1.21-1.08 0-2.24.116-3.477.35-1.237.235-2.597.6-4.082 1.095v-3.516a38.347 38.347 0 0 1 4.2-.938 23.777 23.777 0 0 1 3.71-.312c2.995 0 5.365.684 7.11 2.05 1.745 1.355 2.617 3.19 2.617 5.509 0 1.614-.462 2.981-1.387 4.101-.924 1.107-2.24 1.875-3.945 2.305zM459.07 392.05l-9.96 15.567h9.96v-15.566zm-1.035-3.437h4.961v19.004h4.16v3.281h-4.16v6.875h-3.925v-6.875h-13.165v-3.808l12.13-18.477zM473.739 388.613h15.488v3.32h-11.875v7.149a10.37 10.37 0 0 1 1.719-.43 9.59 9.59 0 0 1 1.718-.156c3.256 0 5.834.892 7.735 2.676 1.9 1.784 2.851 4.2 2.851 7.246 0 3.138-.976 5.58-2.93 7.324-1.953 1.732-4.706 2.598-8.261 2.598-1.224 0-2.474-.104-3.75-.313a29.94 29.94 0 0 1-3.926-.937v-3.965a15.373 15.373 0 0 0 3.633 1.426c1.25.312 2.571.469 3.965.469 2.252 0 4.036-.593 5.351-1.778 1.315-1.185 1.973-2.793 1.973-4.824 0-2.031-.658-3.64-1.973-4.824-1.315-1.185-3.099-1.778-5.351-1.778-1.055 0-2.11.118-3.164.352a16.66 16.66 0 0 0-3.203 1.094v-14.649zM499.207 388.613h15.489v3.32H502.82v7.149a10.37 10.37 0 0 1 1.718-.43 9.59 9.59 0 0 1 1.72-.156c3.254 0 5.832.892 7.733 2.676 1.901 1.784 2.852 4.2 2.852 7.246 0 3.138-.977 5.58-2.93 7.324-1.953 1.732-4.707 2.598-8.261 2.598-1.224 0-2.474-.104-3.75-.313a29.94 29.94 0 0 1-3.926-.937v-3.965a15.373 15.373 0 0 0 3.633 1.426c1.25.312 2.571.469 3.964.469 2.253 0 4.037-.593 5.352-1.778 1.315-1.185 1.973-2.793 1.973-4.824 0-2.031-.658-3.64-1.973-4.824-1.315-1.185-3.099-1.778-5.352-1.778-1.054 0-2.109.118-3.164.352a16.66 16.66 0 0 0-3.203 1.094v-14.649z\"/></g></g></svg>";

    var visa = "<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"750\" height=\"471\" viewBox=\"0 0 750 471\"><g fill-rule=\"nonzero\" fill=\"none\"><rect fill=\"#0E4595\" width=\"750\" height=\"471\" rx=\"40\"/><path fill=\"#FFF\" d=\"M278.197 334.228l33.361-195.763h53.36l-33.385 195.763zM524.308 142.688c-10.572-3.966-27.137-8.222-47.823-8.222-52.725 0-89.865 26.55-90.18 64.603-.298 28.13 26.513 43.822 46.753 53.186 20.77 9.594 27.752 15.714 27.654 24.283-.132 13.121-16.587 19.116-31.923 19.116-21.357 0-32.703-2.966-50.226-10.276l-6.876-3.111-7.49 43.824c12.464 5.464 35.51 10.198 59.438 10.443 56.09 0 92.501-26.246 92.916-66.882.2-22.268-14.016-39.216-44.8-53.188-18.65-9.055-30.072-15.099-29.951-24.268 0-8.137 9.667-16.839 30.556-16.839 17.45-.27 30.089 3.535 39.937 7.5l4.781 2.26 7.234-42.43M661.615 138.465h-41.231c-12.774 0-22.332 3.487-27.942 16.234l-79.245 179.404h56.032s9.161-24.123 11.233-29.418c6.124 0 60.554.084 68.337.084 1.596 6.853 6.491 29.334 6.491 29.334h49.513l-43.188-195.638zm-65.418 126.407c4.413-11.279 21.26-54.723 21.26-54.723-.316.522 4.38-11.334 7.075-18.684l3.606 16.879s10.217 46.728 12.352 56.528h-44.293z\"/><path d=\"M45.879 138.465l-.682 4.074c21.091 5.106 39.93 12.494 56.422 21.686l47.346 169.691 56.455-.066 84.004-195.385h-56.522l-52.24 133.496-5.566-27.129a88.005 88.005 0 0 0-.823-2.49l-18.166-87.35c-3.23-12.396-12.598-16.095-24.187-16.527H45.879z\" fill=\"#fff\"/></g></svg>";

    var mastercard = "<svg width=\"750\" height=\"471\" viewBox=\"0 0 750 471\" xmlns=\"http://www.w3.org/2000/svg\"><g fill-rule=\"nonzero\" fill=\"none\"><rect fill=\"#000\" width=\"750\" height=\"471\" rx=\"40\"/><path d=\"M221.13 421.67v-24.85c0-9.53-5.8-15.74-15.32-15.74-5 0-10.35 1.66-14.08 7-2.9-4.56-7-7-13.25-7a14.07 14.07 0 0 0-12 5.8v-5h-7.87v39.76h7.87v-22.75c0-7 4.14-10.35 9.94-10.35s9.11 3.73 9.11 10.35v22.78h7.87v-22.78c0-7 4.14-10.35 9.94-10.35s9.11 3.73 9.11 10.35v22.78h8.68zm129.22-39.35h-14.5v-12H328v12h-8.28v7H328V408c0 9.11 3.31 14.5 13.25 14.5a23.17 23.17 0 0 0 10.75-2.9l-2.49-7a13.63 13.63 0 0 1-7.46 2.07c-4.14 0-6.21-2.49-6.21-6.63V389h14.5v-6.63l.01-.05zm73.72-1.24a12.39 12.39 0 0 0-10.77 5.8v-5h-7.87v39.76h7.87v-22.33c0-6.63 3.31-10.77 8.7-10.77a24.24 24.24 0 0 1 5.38.83l2.49-7.46a28 28 0 0 0-5.8-.83zm-111.41 4.14c-4.14-2.9-9.94-4.14-16.15-4.14-9.94 0-16.15 4.56-16.15 12.43 0 6.63 4.56 10.35 13.25 11.6l4.14.41c4.56.83 7.46 2.49 7.46 4.56 0 2.9-3.31 5-9.53 5a21.84 21.84 0 0 1-13.25-4.14l-4.14 6.21c5.8 4.14 12.84 5 17 5 11.6 0 17.81-5.38 17.81-12.84 0-7-5-10.35-13.67-11.6l-4.14-.41c-3.73-.41-7-1.66-7-4.14 0-2.9 3.31-5 7.87-5 5 0 9.94 2.07 12.43 3.31l4.07-6.25zm120.11 16.57c0 12 7.87 20.71 20.71 20.71 5.8 0 9.94-1.24 14.08-4.56l-4.14-6.21a16.74 16.74 0 0 1-10.35 3.73c-7 0-12.43-5.38-12.43-13.25S446 389 453.07 389a16.74 16.74 0 0 1 10.35 3.73l4.14-6.21c-4.14-3.31-8.28-4.56-14.08-4.56-12.43-.83-20.71 7.87-20.71 19.88v-.05zm-55.5-20.71c-11.6 0-19.47 8.28-19.47 20.71 0 12.43 8.28 20.71 20.29 20.71a25.33 25.33 0 0 0 16.15-5.38l-4.14-5.8a19.79 19.79 0 0 1-11.6 4.14c-5.38 0-11.18-3.31-12-10.35h29.41v-3.31c0-12.43-7.46-20.71-18.64-20.71v-.01zm-.41 7.46c5.8 0 9.94 3.73 10.35 9.94h-21.53c1.24-5.8 5-9.94 11.18-9.94zm-107.27 13.25v-19.88h-7.87v5c-2.9-3.73-7-5.8-12.84-5.8-11.18 0-19.47 8.7-19.47 20.71 0 12.01 8.28 20.71 19.47 20.71 5.8 0 9.94-2.07 12.84-5.8v5h7.87v-19.94zm-31.89 0c0-7.46 4.56-13.25 12.43-13.25 7.46 0 12 5.8 12 13.25 0 7.87-5 13.25-12 13.25-7.87.41-12.43-5.8-12.43-13.25zm306.08-20.71a12.39 12.39 0 0 0-10.77 5.8v-5h-7.87v39.76H533v-22.33c0-6.63 3.31-10.77 8.7-10.77a24.24 24.24 0 0 1 5.38.83l2.49-7.46a28 28 0 0 0-5.8-.83h.01zm-30.65 20.71v-19.88h-7.87v5c-2.9-3.73-7-5.8-12.84-5.8-11.18 0-19.47 8.7-19.47 20.71 0 12.01 8.28 20.71 19.47 20.71 5.8 0 9.94-2.07 12.84-5.8v5h7.87v-19.94zm-31.89 0c0-7.46 4.56-13.25 12.43-13.25 7.46 0 12 5.8 12 13.25 0 7.87-5 13.25-12 13.25-7.87.41-12.43-5.8-12.43-13.25zm111.83 0v-35.62h-7.87v20.71c-2.9-3.73-7-5.8-12.84-5.8-11.18 0-19.47 8.7-19.47 20.71 0 12.01 8.28 20.71 19.47 20.71 5.8 0 9.94-2.07 12.84-5.8v5h7.87v-19.91zm-31.89 0c0-7.46 4.56-13.25 12.43-13.25 7.46 0 12 5.8 12 13.25 0 7.87-5 13.25-12 13.25-7.88.42-12.44-5.79-12.44-13.25h.01z\" fill=\"#FFF\"/><path fill=\"#FF5F00\" d=\"M303.55 80.39h143.72v234.42H303.55z\"/><path d=\"M318.05 197.6a149.5 149.5 0 0 1 56.74-117.21c-61.128-48.061-148.928-41.075-201.687 16.048-52.758 57.123-52.758 145.2 0 202.324 52.759 57.123 140.559 64.11 201.687 16.048a149.5 149.5 0 0 1-56.74-117.21z\" fill=\"#EB001B\"/><path d=\"M616.26 197.6c.041 57.047-32.503 109.106-83.804 134.056-51.302 24.95-112.347 18.408-157.196-16.846a149.43 149.43 0 0 0 0-234.42c44.85-35.254 105.894-41.797 157.196-16.846 51.3 24.95 83.845 77.01 83.804 134.056z\" fill=\"#F79E1B\"/></g></svg>";

    var amex = "<svg width=\"750\" height=\"471\" viewBox=\"0 0 750 471\" xmlns=\"http://www.w3.org/2000/svg\"><g fill-rule=\"nonzero\" fill=\"none\"><rect fill=\"#2557D6\" width=\"750\" height=\"471\" rx=\"40\"/><path d=\"M.003 221.185h36.024l8.123-19.51h18.185l8.101 19.51h70.88V206.27l6.327 14.98h36.796l6.327-15.202v15.138h176.151l-.082-32.026h3.408c2.386.083 3.083.302 3.083 4.226v27.8h91.106v-7.455c7.349 3.92 18.779 7.455 33.819 7.455h38.328l8.203-19.51h18.185l8.021 19.51h73.86v-18.532l11.186 18.532h59.187V98.678h-58.576v14.468l-8.202-14.468h-60.105v14.468l-7.532-14.468h-81.188c-13.59 0-25.536 1.889-35.186 7.153v-7.153h-56.026v7.153c-6.14-5.426-14.508-7.153-23.812-7.153H179.908l-13.734 31.641-14.104-31.641H87.6v14.468l-7.083-14.468H25.534L0 156.924v64.261h.003zm227.397-17.67h-21.615l-.08-68.794-30.573 68.793H156.62l-30.652-68.854v68.854H83.084l-8.101-19.592h-43.9L22.9 203.514H0l37.756-87.837h31.326l35.859 83.164v-83.164h34.412l27.593 59.587 25.347-59.587h35.104v87.837h.003zM67.777 165.692l-14.43-35.017-14.35 35.017h28.78zm245.642 37.821h-70.433v-87.837h70.433v18.291h-49.348v15.833h48.165v18.005H264.07v17.542h49.348v18.166zm99.256-64.18c0 14.004-9.386 21.24-14.856 23.412 4.613 1.748 8.553 4.838 10.43 7.397 2.976 4.369 3.49 8.271 3.49 16.116v17.255h-21.266l-.08-11.077c0-5.285.508-12.886-3.328-17.112-3.081-3.09-7.777-3.76-15.368-3.76h-22.633v31.95H327.98v-87.838h48.495c10.775 0 18.714.283 25.53 4.207 6.67 3.924 10.67 9.652 10.67 19.45zm-26.652 13.042c-2.898 1.752-6.324 1.81-10.43 1.81H349.98v-19.51h25.962c3.674 0 7.508.164 9.998 1.584 2.735 1.28 4.427 4.003 4.427 7.765 0 3.84-1.61 6.929-4.344 8.351zm60.466 51.138h-21.513v-87.837h21.513v87.837zm249.74 0H666.35l-39.964-65.927v65.927h-42.94l-8.204-19.592h-43.799l-7.96 19.592H498.81c-10.248 0-23.224-2.257-30.572-9.715-7.41-7.458-11.265-17.56-11.265-33.533 0-13.027 2.304-24.936 11.366-34.347 6.816-7.01 17.49-10.242 32.02-10.242h20.412v18.821h-19.984c-7.694 0-12.039 1.14-16.224 5.203-3.594 3.699-6.06 10.69-6.06 19.897 0 9.41 1.878 16.196 5.797 20.628 3.245 3.476 9.144 4.53 14.694 4.53h9.469l29.716-69.076h31.592l35.696 83.081V115.68h32.103l37.062 61.174V115.68h21.596v87.834zM568.07 165.693l-14.591-35.017-14.51 35.017h29.1zM749.956 343.767c-5.121 7.458-15.101 11.239-28.611 11.239h-40.718v-18.84h40.553c4.022 0 6.837-.527 8.532-2.175a7.71 7.71 0 0 0 2.493-5.73c0-2.56-1.024-4.592-2.575-5.81-1.53-1.341-3.757-1.95-7.429-1.95-19.797-.67-44.495.609-44.495-27.194 0-12.743 8.125-26.157 30.25-26.157h41.998l.002-17.48h-39.022c-11.776 0-20.33 2.808-26.388 7.174v-7.175H626.83c-9.23 0-20.063 2.279-25.187 7.175v-7.175H498.578v7.175c-8.203-5.892-22.043-7.175-28.431-7.175h-67.983v7.175c-6.49-6.258-20.92-7.175-29.716-7.175h-76.085l-17.41 18.763-16.307-18.763H148.99v122.592h111.516l17.94-19.06 16.9 19.06 68.739.061v-28.838h6.757c9.12.14 19.878-.226 29.368-4.31v33.085h56.697v-31.952h2.735c3.49 0 3.834.143 3.834 3.616v28.333H635.71c10.935 0 22.365-2.787 28.695-7.845v7.845h54.632c11.369 0 22.471-1.587 30.918-5.651v-22.838zm-341.503-47.154c0 24.406-18.286 29.445-36.716 29.445H345.43v29.469h-40.98l-25.962-29.085-26.981 29.085H167.99v-87.859h84.8l25.941 28.799 26.819-28.799h67.371c16.732 0 35.532 4.613 35.532 28.945zm-167.625 40.434h-51.839v-17.481h46.289V301.64h-46.289v-15.973h52.86l23.062 25.604-24.083 25.776zm83.526 10.06l-32.37-35.788 32.37-34.651v70.439zm47.873-39.066H344.98v-22.374h27.492c7.612 0 12.896 3.09 12.896 10.773 0 7.598-5.04 11.601-13.14 11.601zm142.744-40.373h70.369v18.17h-49.372v15.973h48.167v17.925h-48.167v17.481l49.372.08v18.23h-70.37v-87.859zm-27.054 47.03c4.693 1.724 8.53 4.816 10.329 7.375 2.977 4.29 3.408 8.293 3.493 16.037v17.417H480.57v-10.992c0-5.286.511-13.112-3.408-17.198-3.08-3.147-7.777-3.9-15.468-3.9h-22.533v32.09h-21.186v-87.859h48.678c10.674 0 18.448.47 25.369 4.146 6.654 4.004 10.839 9.488 10.839 19.51-.003 14.024-9.395 21.18-14.945 23.373zM476 303.59c-2.82 1.667-6.308 1.81-10.41 1.81h-25.614v-19.733h25.962c3.754 0 7.51.08 10.062 1.587 2.732 1.423 4.366 4.144 4.366 7.903 0 3.76-1.634 6.788-4.366 8.433zm190.336 5.597c4.106 4.23 6.306 9.572 6.306 18.614 0 18.9-11.858 27.723-33.122 27.723h-41.065v-18.84h40.9c4 0 6.836-.527 8.613-2.175 1.45-1.359 2.49-3.333 2.49-5.73 0-2.56-1.125-4.592-2.573-5.81-1.612-1.34-3.836-1.95-7.508-1.95-19.717-.67-44.41.61-44.41-27.193 0-12.744 8.04-26.158 30.144-26.158h42.269v18.7h-38.677c-3.834 0-6.327.143-8.447 1.587-2.31 1.422-3.166 3.534-3.166 6.32 0 3.315 1.96 5.57 4.613 6.545 2.224.77 4.613.996 8.205.996l11.35.305c11.446.278 19.303 2.249 24.078 7.066zM750 285.667h-38.427c-3.836 0-6.385.143-8.532 1.587-2.224 1.423-3.081 3.534-3.081 6.322 0 3.314 1.878 5.569 4.61 6.544 2.225.77 4.614.996 8.126.996l11.427.304c11.531.284 19.228 2.258 23.921 7.072.855.67 1.368 1.422 1.956 2.175v-25z\" fill=\"#FFF\"/></g></svg>";

    var diners = "<svg width=\"750\" height=\"471\" viewBox=\"0 0 750 471\" xmlns=\"http://www.w3.org/2000/svg\"><g fill-rule=\"nonzero\" fill=\"none\"><rect fill=\"#0079BE\" width=\"750\" height=\"471\" rx=\"40\"/><path d=\"M584.934 237.947c0-99.415-82.981-168.133-173.895-168.1h-78.242c-92.003-.033-167.73 68.705-167.73 168.1 0 90.93 75.727 165.64 167.73 165.204h78.242c90.914.436 173.895-74.293 173.895-165.204z\" fill=\"#FFF\"/><path d=\"M333.28 83.93c-84.07.027-152.194 68.308-152.214 152.58.02 84.258 68.144 152.533 152.214 152.56 84.09-.027 152.228-68.302 152.24-152.56-.012-84.272-68.15-152.553-152.24-152.58z\" fill=\"#0079BE\"/><path d=\"M237.066 236.098c.08-41.18 25.746-76.296 61.94-90.25v180.48c-36.194-13.947-61.861-49.044-61.94-90.23zm131 90.275V145.847c36.207 13.92 61.914 49.057 61.98 90.257-.066 41.212-25.773 76.322-61.98 90.269z\" fill=\"#FFF\"/></g></svg>";

    var discover = "<svg width=\"750\" height=\"471\" viewBox=\"0 0 750 471\" xmlns=\"http://www.w3.org/2000/svg\"><g fill-rule=\"nonzero\" fill=\"none\"><path d=\"M52.877 0C23.68 0 0 23.155 0 51.71v367.58C0 447.85 23.672 471 52.877 471h644.246C726.32 471 750 447.845 750 419.29V51.71C750 23.15 726.328 0 697.123 0H52.877z\" fill=\"#4D4D4D\"/><path d=\"M314.57 152.198c8.496 0 15.623 1.733 24.295 5.912v22.087c-8.215-7.633-15.341-10.828-24.765-10.828-18.523 0-33.09 14.576-33.09 33.055 0 19.488 14.116 33.196 34.008 33.196 8.955 0 15.95-3.029 23.847-10.54v22.098c-8.981 4.02-16.26 5.607-24.765 5.607-30.075 0-53.444-21.935-53.444-50.224 0-27.984 23.991-50.363 53.914-50.363zm-93.379.609c11.102 0 21.26 3.612 29.754 10.673l-10.335 12.86c-5.145-5.48-10.01-7.792-15.927-7.792-8.513 0-14.713 4.606-14.713 10.667 0 5.198 3.48 7.95 15.332 12.118 22.467 7.808 29.124 14.732 29.124 30.021 0 18.633-14.399 31.602-34.923 31.602-15.029 0-25.955-5.626-35.055-18.32l12.758-11.68c4.549 8.36 12.136 12.837 21.557 12.837 8.811 0 15.334-5.779 15.334-13.576 0-4.042-1.976-7.507-5.921-9.958-1.987-1.16-5.921-2.89-13.653-5.481-18.55-6.347-24.914-13.132-24.914-26.391 0-15.75 13.667-27.58 31.582-27.58zm225.695 1.678h21.575l27.004 64.645 27.35-64.645h21.412l-43.744 98.713h-10.628l-42.969-98.713zm-382.065.148h28.991c32.03 0 54.359 19.786 54.359 48.19 0 14.163-6.831 27.856-18.382 36.944-9.72 7.67-20.795 11.11-36.13 11.11H64.822v-96.244zm92.437 0h19.751v96.245h-19.75v-96.245zm395.899 0h56.011v16.308h-36.275v21.362h34.938v16.3h-34.938v25.98h36.275v16.295h-56.011v-96.245zm69.094 0h29.283c22.78 0 35.833 10.397 35.833 28.416 0 14.735-8.187 24.406-23.064 27.284l31.873 40.545h-24.288l-27.336-38.664h-2.575v38.664h-19.726v-96.245zm19.726 15.159v29.148h5.771c12.612 0 19.297-5.206 19.297-14.88 0-9.367-6.686-14.268-18.985-14.268h-6.083zm-557.42 1.149v63.642h5.3c12.763 0 20.823-2.324 27.028-7.648 6.83-5.782 10.94-15.015 10.94-24.25 0-9.222-4.11-18.18-10.94-23.961-6.523-5.61-14.265-7.783-27.028-7.783h-5.3z\" fill=\"#FFF\"/><path d=\"M399.164 151.56c29.75 0 53.867 22.167 53.867 49.552v.031c0 27.385-24.117 49.584-53.867 49.584-29.75 0-53.867-22.199-53.867-49.584v-.03c0-27.386 24.117-49.554 53.867-49.554zm350.819 119.534c-25.048 17.233-212.574 140.397-537.264 199.891h484.387c29.197 0 52.877-23.154 52.877-51.71V271.094z\" fill=\"#F47216\"/></g></svg>";

    var jcb = "<svg width=\"750\" height=\"471\" viewBox=\"0 0 750 471\" xmlns=\"http://www.w3.org/2000/svg\"><defs><linearGradient x1=\".032%\" y1=\"50%\" x2=\"99.974%\" y2=\"50%\" id=\"a\"><stop stop-color=\"#007B40\" offset=\"0%\"/><stop stop-color=\"#55B330\" offset=\"100%\"/></linearGradient><linearGradient x1=\".472%\" y1=\"50%\" x2=\"99.986%\" y2=\"50%\" id=\"b\"><stop stop-color=\"#1D2970\" offset=\"0%\"/><stop stop-color=\"#006DBA\" offset=\"100%\"/></linearGradient><linearGradient x1=\".114%\" y1=\"50.001%\" x2=\"99.986%\" y2=\"50.001%\" id=\"c\"><stop stop-color=\"#6E2B2F\" offset=\"0%\"/><stop stop-color=\"#E30138\" offset=\"100%\"/></linearGradient></defs><g fill-rule=\"nonzero\" fill=\"none\"><rect fill=\"#0E4C96\" width=\"750\" height=\"471\" rx=\"40\"/><path d=\"M617.243 346.766c0 41.615-33.728 75.36-75.36 75.36H132.757V124.245c0-41.626 33.733-75.37 75.365-75.37l409.121-.001v297.892z\" fill=\"#FFF\"/><path d=\"M483.859 242.045c11.684.253 23.437-.516 35.077.4 11.787 2.2 14.628 20.043 4.156 25.888-7.141 3.85-15.633 1.432-23.379 2.113H483.86v-28.401zm41.833-32.145c2.596 9.165-6.238 17.392-15.066 16.13h-26.767c.185-8.642-.368-18.021.272-26.208 10.724.301 21.549-.616 32.21.48 4.58 1.15 8.413 4.916 9.35 9.598zM590.12 73.997c.498 17.501.071 35.927.214 53.783-.035 72.596.072 145.194-.055 217.79-.469 27.207-24.582 50.844-51.6 51.387-27.046.111-54.095.016-81.142.047v-109.75c29.47-.154 58.959.307 88.417-.232 13.667-.86 28.632-9.876 29.27-24.915 1.61-15.102-12.632-25.55-26.153-27.201-5.198-.135-5.044-1.515 0-2.117 12.892-2.787 23.02-16.133 19.226-29.499-3.236-14.058-18.773-19.499-31.697-19.472-26.351-.18-52.709-.026-79.063-.077.172-20.489-.354-41 .286-61.474 2.087-26.716 26.806-48.747 53.447-48.27h78.85z\" fill=\"url(#a)\"/><path d=\"M159.74 125.04c.674-27.163 24.889-50.611 51.875-51.007 26.944-.083 53.891-.012 80.837-.036-.074 90.885.148 181.777-.112 272.658-1.038 26.834-24.99 49.834-51.679 50.307-26.996.099-53.995.014-80.992.042V283.551c26.223 6.194 53.722 8.832 80.473 4.721 15.993-2.575 33.488-10.424 38.902-27.014 3.986-14.192 1.742-29.126 2.334-43.692v-33.824h-46.297c-.208 22.37.426 44.78-.335 67.125-1.248 13.734-14.846 22.46-27.8 21.995-16.066.169-47.898-11.64-47.898-11.64-.08-41.917.466-94.408.692-136.182z\" fill=\"url(#b)\"/><path d=\"M309.72 197.39c-2.434.517-.49-8.3-1.114-11.646.166-21.15-.346-42.323.284-63.458 2.083-26.829 26.991-48.916 53.739-48.288h78.766c-.074 90.884.147 181.775-.112 272.656-1.039 26.834-24.992 49.833-51.68 50.308-26.998.1-53.998.015-80.997.043V272.708c18.44 15.128 43.5 17.484 66.472 17.525 17.317-.006 34.534-2.675 51.35-6.67V260.79c-18.953 9.447-41.233 15.446-62.243 10.018-14.656-3.65-25.294-17.811-25.056-32.936-1.699-15.728 7.524-32.335 22.981-37.011 19.19-6.008 40.108-1.413 58.096 6.398 3.855 2.018 7.765 4.521 6.222-1.921v-17.9c-30.084-7.157-62.101-9.792-92.329-2.004-8.748 2.468-17.27 6.21-24.379 11.956z\" fill=\"url(#c)\"/></g></svg>";

    var unionpay = "<svg width=\"750\" height=\"471\" viewBox=\"0 0 750 471\" xmlns=\"http://www.w3.org/2000/svg\"><g fill-rule=\"nonzero\" fill=\"none\"><rect fill=\"#FFF\" width=\"750\" height=\"471\" rx=\"40\"/><path d=\"M201.81 55h142.393c19.87 0 32.287 16.406 27.63 36.47L305.5 378.948c-4.656 20.064-24.629 36.47-44.498 36.47H118.61c-19.87 0-32.287-16.406-27.63-36.47L157.311 91.47C161.968 71.302 181.837 55 201.706 55h.104z\" fill=\"#D10429\"/><path d=\"M331.75 55h163.815c19.869 0 10.866 16.406 6.209 36.47L435.44 378.948c-4.657 20.064-3.208 36.47-23.077 36.47H248.549c-19.972 0-32.287-16.406-27.527-36.47L287.356 91.47C292.012 71.302 311.88 55 331.854 55h-.104z\" fill=\"#022E64\"/><path d=\"M489.815 55h142.394c19.869 0 32.287 16.406 27.63 36.47l-66.333 287.478c-4.657 20.064-24.63 36.47-44.498 36.47H406.614c-19.972 0-32.287-16.406-27.63-36.47L445.317 91.47C449.974 71.302 469.843 55 489.711 55h.104z\" fill=\"#076F74\"/><path d=\"M465.905 326.015h13.453l3.829-13.063h-13.35l-3.932 13.063zm10.762-35.948l-4.657 15.466s5.071-2.613 7.865-3.449c2.794-.627 6.933-1.15 6.933-1.15l3.208-10.763h-13.452l.103-.104zm6.727-22.154l-4.45 14.839s4.967-2.3 7.761-3.03c2.794-.732 6.933-.941 6.933-.941l3.208-10.764h-13.349l-.103-.104zm29.7 0l-17.386 57.997h4.657l-3.622 12.017h-4.657l-1.138 3.658H474.39l1.139-3.658H442l3.311-11.076h3.415l17.593-58.938L469.837 256h16.868l-1.76 5.956s4.45-3.239 8.797-4.389c4.243-1.149 28.665-1.567 28.665-1.567l-3.622 11.808h-5.795l.103.105z\" fill=\"#FEFEFE\"/><path d=\"M520 256h18.006l.207 6.792c-.103 1.15.828 1.672 3.001 1.672h3.622l-3.311 11.182h-9.728c-8.382.627-11.59-3.03-11.383-7.106l-.31-12.436L520 256zm2.216 53.2h-17.178l2.897-9.927h19.662l2.794-9.092H511.04L514.351 279h53.812l-3.311 11.181h-18.11l-2.794 9.092h18.11l-3.002 9.927h-19.558l-3.518 4.18h7.968l1.966 12.54c.207 1.254.207 2.09.62 2.613.415.418 2.795.627 4.14.627h2.38l-3.725 12.226h-6.106c-.93 0-2.38-.104-4.346-.104-1.863-.21-3.104-1.254-4.346-1.881-1.139-.523-2.794-1.881-3.208-4.285l-1.863-12.54-8.9 12.331c-2.794 3.867-6.622 6.897-13.142 6.897H495l3.311-10.868h4.76c1.346 0 2.588-.522 3.52-1.045.93-.418 1.758-.836 2.586-2.194l13.04-18.497zM334.314 282h45.429l-3.312 10.972h-18.11l-2.793 9.3h18.627l-3.415 11.287h-18.524l-4.553 15.152c-.517 1.672 4.45 1.881 6.209 1.881l9.314-1.254-3.726 12.54h-20.904c-1.655 0-2.897-.209-4.76-.627-1.76-.418-2.587-1.254-3.311-2.403-.725-1.254-1.967-2.195-1.139-4.912l6.002-20.064H325l3.415-11.495h10.348l2.794-9.3H331.21l3.312-10.973-.207-.104zm31.387-19.835h18.627l-3.415 11.39h-25.457l-2.794 2.404c-1.242 1.15-1.552.732-3.105 1.568-1.448.731-4.45 2.194-8.382 2.194H333l3.311-10.972h2.484c2.07 0 3.519-.21 4.243-.627.828-.523 1.76-1.672 2.69-3.553l4.657-8.569h18.524l-3.208 6.27v-.105zm35.108 18.81s5.07-4.702 13.763-6.165c1.966-.418 14.384-.21 14.384-.21l1.863-6.27h-26.181l-3.83 12.75v-.105zm24.629 4.807h-25.975l-1.552 5.33h22.56c2.69-.314 3.208.104 3.415-.105l1.655-5.225h-.103zm-33.736-29.678h15.833l-2.276 8.047s4.967-4.076 8.485-5.539c3.519-1.254 11.383-2.508 11.383-2.508l25.664-.104-8.796 29.469c-1.449 5.016-3.208 8.255-4.243 9.823-.93 1.463-2.07 2.821-4.346 4.075-2.173 1.15-4.14 1.881-6.002 1.986-1.656.104-4.346.209-7.865.209h-24.732l-6.934 23.303c-.62 2.299-.931 3.448-.517 4.075.31.523 1.242 1.15 2.38 1.15l10.866-1.045-3.726 12.749h-12.21c-3.933 0-6.727-.105-8.693-.21-1.863-.208-3.83 0-5.175-1.044-1.138-1.045-2.897-2.404-2.794-3.762.104-1.254.621-3.344 1.45-6.27l22.248-74.404z\" fill=\"#FEFEFE\"/><path d=\"M437.84 303l-1.449 7.106c-.62 2.194-1.138 3.866-2.794 5.33-1.759 1.462-3.725 3.03-8.485 3.03l-8.796.418-.104 7.942c-.103 2.194.518 1.985.828 2.403.414.418.724.523 1.138.732l2.794-.21 8.383-.417-3.519 11.704h-9.624c-6.726 0-11.797-.21-13.35-1.463-1.655-1.045-1.862-2.3-1.862-4.598l.62-31.141h15.42l-.207 6.374h3.725c1.242 0 2.174-.104 2.691-.418.517-.313.828-.836 1.035-1.567l1.552-5.016h12.108l-.104-.209zM218.47 147c-.517 2.508-10.451 48.592-10.451 48.592-2.174 9.3-3.726 15.989-8.9 20.273-3.001 2.508-6.52 3.657-10.555 3.657-6.52 0-10.245-3.239-10.866-9.404l-.104-2.09s1.966-12.436 1.966-12.54c0 0 10.349-42.009 12.212-47.548.103-.313.103-.522.103-.627-20.18.21-23.801 0-24.008-.313-.104.418-.621 3.03-.621 3.03L156.69 197.37l-.932 3.97L154 214.508c0 3.866.724 7.105 2.277 9.718 4.863 8.569 18.627 9.823 26.388 9.823 10.038 0 19.455-2.195 25.767-6.061 11.073-6.584 13.97-16.929 16.454-26.02l1.242-4.703s10.659-43.576 12.522-49.219c.103-.314.103-.523.207-.627-14.695.104-18.938 0-20.387-.314V147zm59.03 86.623c-7.141-.105-9.728-.105-18.11.313l-.311-.627c.724-3.24 1.552-6.374 2.173-9.614l1.035-4.389c1.552-6.792 3.001-14.839 3.208-17.242.207-1.463.62-5.12-3.519-5.12-1.759 0-3.518.835-5.38 1.671-1.036 3.658-3.002 13.899-4.037 18.497-2.07 9.823-2.173 10.972-3.104 15.78l-.621.626c-7.347-.104-9.934-.104-18.42.314L230 233.1c1.449-5.852 2.794-11.704 4.14-17.556 3.518-15.78 4.45-21.84 5.38-29.887l.725-.418c8.279-1.149 10.245-1.463 19.248-3.239l.724.836-1.345 5.016c1.552-.94 3.001-1.881 4.553-2.613 4.243-2.09 8.9-2.717 11.487-2.717 3.932 0 8.279 1.15 10.038 5.748 1.656 4.075.62 9.091-1.656 19.019l-1.138 5.016c-2.277 11.077-2.69 13.062-3.933 20.586l-.827.627.103.105zm29.058.027c-4.346 0-7.14-.104-9.83 0-2.691 0-5.278.21-9.314.314l-.207-.314-.207-.418c1.138-4.18 1.656-5.643 2.277-7.106.517-1.463 1.034-2.926 2.07-7.21 1.241-5.539 2.069-9.405 2.586-12.854.621-3.24.932-6.06 1.346-9.3l.31-.209.31-.314c4.347-.627 7.038-1.045 9.832-1.463 2.794-.418 5.691-.94 10.141-1.776l.207.418.103.418-2.483 10.345c-.828 3.449-1.656 6.897-2.38 10.346-1.553 7.315-2.277 10.032-2.587 12.017-.414 1.881-.518 2.822-1.139 6.584l-.414.313-.414.314-.207-.105zm45.941-25.675c-.31 1.881-1.966 8.883-4.139 11.809-1.552 2.194-3.312 3.553-5.381 3.553-.621 0-4.14 0-4.243-5.33 0-2.612.517-5.33 1.138-8.255 1.863-8.465 4.14-15.466 9.831-15.466 4.45 0 4.76 5.225 2.794 13.69zm18.73.836c2.484-11.077.518-16.302-1.862-19.437-3.725-4.807-10.348-6.374-17.178-6.374-4.14 0-13.867.418-21.525 7.524-5.484 5.12-8.071 12.122-9.52 18.81-1.553 6.792-3.312 19.019 7.865 23.617 3.414 1.463 8.382 1.88 11.59 1.88 8.175 0 16.557-2.298 22.87-8.986 4.863-5.434 7.036-13.585 7.864-17.034h-.103zm174.433 26.08c-8.693-.104-11.176-.104-19.145.314l-.517-.627c2.173-8.256 4.346-16.616 6.313-24.976 2.483-10.868 3.104-15.466 3.932-21.84l.62-.523c8.59-1.254 10.97-1.567 19.973-3.239l.207.731c-1.656 6.897-3.208 13.69-4.864 20.482-3.311 14.317-4.45 21.632-5.691 29.156l-.828.627v-.105z\" fill=\"#FEFEFE\"/><path d=\"M533.16 209.374c-.414 1.776-2.07 8.882-4.243 11.808-1.449 2.09-4.967 3.449-6.933 3.449-.621 0-4.036 0-4.243-5.225 0-2.613.517-5.33 1.138-8.256 1.863-8.255 4.14-15.257 9.831-15.257 4.45 0 6.416 5.12 4.45 13.585v-.104zm17.075.836c2.483-11.077-7.658-.94-9.21-4.598-2.484-5.748-.932-17.243-10.866-21.109-3.829-1.568-12.832.418-20.49 7.524-5.381 5.016-8.072 12.017-9.52 18.705-1.553 6.688-3.312 19.02 7.76 23.304 3.52 1.567 6.727 1.985 9.935 1.776 11.177-.627 19.662-17.66 25.975-24.348 4.863-5.33 5.691 1.985 6.416-1.254zm-129.943 23.413c-7.14-.105-9.624-.105-18.006.313l-.31-.627c.724-3.24 1.552-6.374 2.276-9.614l.931-4.389c1.553-6.792 3.105-14.839 3.208-17.242.207-1.463.621-5.12-3.415-5.12-1.759 0-3.621.835-5.38 1.671-.932 3.658-3.002 13.899-4.037 18.497-1.966 9.823-2.173 10.972-3.104 15.78l-.621.626c-7.347-.104-9.934-.104-18.42.314L373 233.1c1.449-5.852 2.794-11.704 4.14-17.556 3.518-15.78 4.346-21.84 5.38-29.887l.621-.418c8.28-1.149 10.349-1.463 19.248-3.239l.725.836-1.242 5.016c1.449-.94 3.001-1.881 4.45-2.613 4.243-2.09 8.9-2.717 11.486-2.717 3.933 0 8.176 1.15 10.038 5.748 1.656 4.075.518 9.091-1.759 19.019l-1.138 5.016c-2.38 11.077-2.69 13.062-3.933 20.586l-.827.627.103.105zm62.001-86.519l-6.002.105c-15.523.209-21.732.104-24.215-.209-.207 1.15-.621 3.135-.621 3.135s-5.588 25.916-5.588 26.02c0 0-13.246 55.176-13.867 57.788 13.556-.209 19.041-.209 21.421.105.518-2.613 3.622-17.974 3.726-17.974 0 0 2.69-11.286 2.794-11.704 0 0 .827-1.15 1.655-1.672h1.242c11.694 0 24.836 0 35.185-7.628 7.037-5.225 11.797-13.063 13.97-22.468.517-2.299.931-5.016.931-7.837 0-3.658-.724-7.21-2.794-10.032-5.277-7.42-15.73-7.524-27.837-7.629zm7.761 27.066c-1.241 5.747-4.967 10.659-9.727 12.958-3.932 1.985-8.693 2.194-13.66 2.194h-3.208l.207-1.254s5.899-25.916 5.899-25.811l.207-1.359.103-1.045 2.38.21s12.211 1.044 12.418 1.044c4.76 1.881 6.83 6.688 5.381 13.063zm127.207 8.666l-.724-.836c-8.796 1.776-10.452 2.09-18.524 3.24l-.62.626c0 .105-.104.21-.104.418v-.104c-6.002 14.107-5.899 11.077-10.762 22.154 0-.523 0-.836-.104-1.359l-1.242-24.035-.724-.836c-9.314 1.777-9.52 2.09-18.006 3.24l-.621.627c-.104.313-.104.627-.104.94l.104.105c1.035 5.538.828 4.284 1.863 12.958.517 4.284 1.138 8.569 1.655 12.749.828 7.106 1.346 10.554 2.38 21.318-5.795 9.614-7.14 13.271-12.728 21.735l.31.836c8.383-.313 10.245-.313 16.454-.313l1.346-1.568c4.656-10.136 40.255-71.79 40.255-71.79l-.104-.105zm-302.717 6.922c4.76-3.344 5.38-7.942 1.345-10.345-4.036-2.404-11.176-1.672-15.937 1.672-4.76 3.24-5.277 7.837-1.241 10.345 3.932 2.3 11.072 1.672 15.833-1.672z\" fill=\"#FEFEFE\"/><path d=\"M575.735 256.104l-6.934 12.018c-2.173 4.075-6.312 7.21-12.728 7.21L545 275.123l3.208-10.868h2.173c1.138 0 1.966-.104 2.587-.418.621-.209.932-.627 1.449-1.254l4.14-6.583h17.281l-.103.104z\" fill=\"#FEFEFE\"/></g></svg>";

    var maestro = "<svg width=\"750\" height=\"471\" viewBox=\"0 0 750 471\" xmlns=\"http://www.w3.org/2000/svg\"><g fill-rule=\"nonzero\" fill=\"none\"><rect fill=\"#000\" width=\"750\" height=\"471\" rx=\"40\"/><path d=\"M279.8 421.77V397c0-9.35-6-15.64-15.55-15.72-5-.08-10.26 1.49-13.9 7-2.73-4.38-7-7-13.07-7a13.08 13.08 0 0 0-11.58 5.87v-4.88h-8.61v39.55h8.69v-21.97c0-6.87 3.81-10.51 9.68-10.51 5.71 0 8.61 3.72 8.61 10.42v22h8.69v-21.91c0-6.87 4-10.51 9.68-10.51 5.87 0 8.69 3.72 8.69 10.42v22l8.67.01zM328.28 402v-19.77h-8.61V387c-2.73-3.56-6.87-5.79-12.49-5.79-11.09 0-19.77 8.69-19.77 20.77s8.69 20.77 19.77 20.77c5.63 0 9.76-2.23 12.49-5.79v4.8h8.61V402zm-32 0c0-6.95 4.55-12.66 12-12.66 7.12 0 11.91 5.46 11.91 12.66s-4.8 12.66-11.91 12.66c-7.47 0-12.02-5.71-12.02-12.66h.02zm216.12-20.81a22.29 22.29 0 0 1 8.49 1.59 20.71 20.71 0 0 1 6.75 4.38 20 20 0 0 1 4.46 6.59 22 22 0 0 1 0 16.52 20 20 0 0 1-4.46 6.59 20.69 20.69 0 0 1-6.75 4.38 23.43 23.43 0 0 1-17 0 20.47 20.47 0 0 1-6.73-4.38 20.21 20.21 0 0 1-4.44-6.59 22 22 0 0 1 0-16.52 20.23 20.23 0 0 1 4.44-6.59 20.48 20.48 0 0 1 6.73-4.38 22.29 22.29 0 0 1 8.51-1.59zm0 8.14a12.84 12.84 0 0 0-4.91.93 11.62 11.62 0 0 0-3.92 2.6 12.13 12.13 0 0 0-2.6 4 14.39 14.39 0 0 0 0 10.28 12.11 12.11 0 0 0 2.6 4 11.62 11.62 0 0 0 3.92 2.6 13.46 13.46 0 0 0 9.83 0 11.86 11.86 0 0 0 3.94-2.6 12 12 0 0 0 2.62-4 14.39 14.39 0 0 0 0-10.28 12 12 0 0 0-2.62-4 11.86 11.86 0 0 0-3.94-2.6 12.84 12.84 0 0 0-4.92-.94v.01zM375.1 402c-.08-12.33-7.69-20.77-18.78-20.77-11.58 0-19.69 8.44-19.69 20.77 0 12.58 8.44 20.77 20.27 20.77 6 0 11.42-1.49 16.22-5.54l-4.22-6.37a18.84 18.84 0 0 1-11.5 4.14c-5.54 0-10.59-2.56-11.83-9.68h29.37c.06-1.09.16-2.16.16-3.32zm-29.45-3.47c.91-5.71 4.38-9.6 10.51-9.6 5.54 0 9.1 3.47 10 9.6h-20.51zm65.69-6.2a25.49 25.49 0 0 0-12.34-3.4c-4.72 0-7.53 1.74-7.53 4.63 0 2.65 3 3.39 6.7 3.89l4.05.58c8.61 1.24 13.82 4.88 13.82 11.83 0 7.53-6.62 12.91-18 12.91-6.45 0-12.41-1.66-17.13-5.13l4.05-6.7a21.07 21.07 0 0 0 13.16 4.14c5.87 0 9-1.74 9-4.8 0-2.23-2.23-3.47-6.95-4.14l-4.05-.58c-8.85-1.24-13.65-5.21-13.65-11.67 0-7.86 6.45-12.66 16.46-12.66 6.29 0 12 1.41 16.13 4.14l-3.72 6.96zm41.35-2.23h-14.07V408c0 4 1.41 6.62 5.71 6.62a15.89 15.89 0 0 0 7.61-2.23l2.48 7.36a20.22 20.22 0 0 1-10.76 3.06c-10.18 0-13.73-5.46-13.73-14.65v-18h-8v-7.86h8v-12h8.69v12h14.06l.01 7.8zm29.78-8.85a18.38 18.38 0 0 1 6.12 1.08l-2.65 8.11a14 14 0 0 0-5.38-1c-5.63 0-8.44 3.64-8.44 10.18v22.17h-8.6v-39.56H472V387a11.66 11.66 0 0 1 10.42-5.79l.05.04z\" fill=\"#FFF\"/><path fill=\"#7673C0\" d=\"M309.95 80.39h130.5V314.9h-130.5z\"/><path d=\"M318.24 197.64a148.88 148.88 0 0 1 57-117.26c-61.147-48.062-148.962-41.066-201.728 16.071-52.766 57.137-52.766 145.23 0 202.368 52.766 57.137 140.581 64.133 201.728 16.071a148.88 148.88 0 0 1-57-117.25z\" fill=\"#EB001B\"/><path d=\"M616.5 197.64c.001 57.099-32.598 109.186-83.954 134.143-51.356 24.956-112.454 18.4-157.346-16.883a149.16 149.16 0 0 0 0-234.51c44.89-35.283 105.986-41.839 157.341-16.885 51.355 24.954 83.956 77.038 83.959 134.135z\" fill=\"#00A1DF\"/></g></svg>";

    var elo = "<svg width=\"750\" height=\"471\" viewBox=\"0 0 750 471\" xmlns=\"http://www.w3.org/2000/svg\"><g fill-rule=\"nonzero\" fill=\"none\"><path d=\"M40 0h670c22.1 0 40 17.9 40 40v391c0 22.1-17.9 40-40 40H40c-22.1 0-40-17.9-40-40V40C0 17.9 17.9 0 40 0z\" fill=\"#000\"/><path d=\"M150.7 170.6c6.8-2.3 14.1-3.5 21.7-3.5 33.2 0 60.9 23.6 67.2 54.9l47-9.6c-10.8-53.2-57.8-93.3-114.2-93.3-12.9 0-25.3 2.1-36.9 6l15.2 45.5z\" fill=\"#FFF100\"/><path d=\"M95.2 323l31.8-36c-14.2-12.6-23.1-30.9-23.1-51.4 0-20.4 8.9-38.8 23.1-51.3l-31.8-35.9c-24.1 21.4-39.3 52.5-39.3 87.3 0 34.7 15.2 65.9 39.3 87.3z\" fill=\"#00A3DF\"/><path d=\"M239.6 249.4c-6.4 31.3-34 54.8-67.2 54.8-7.6 0-14.9-1.2-21.8-3.5l-15.2 45.5c11.6 3.9 24.1 6 37 6 56.4 0 103.4-40 114.2-93.2l-47-9.6z\" fill=\"#EE4023\"/><g fill=\"#FFF\"><path d=\"M443.2 281.6c-7.8 7.6-18.3 12.2-29.9 12-8-.1-15.4-2.5-21.6-6.5l-15.6 24.8c10.7 6.7 23.2 10.7 36.8 10.9 19.7.3 37.7-7.5 50.8-20.2l-20.5-21zM415 180.5c-39.2-.6-71.6 30.8-72.2 70-.2 14.7 4 28.5 11.5 39.9l128.8-55.1c-7.2-30.9-34.8-54.2-68.1-54.8zm-42.7 75.6c-.2-1.6-.3-3.3-.3-5 .4-23.1 19.4-41.6 42.5-41.2 12.6.2 23.8 5.9 31.3 14.9l-73.5 31.3zm151.3-107.6v137.3l23.8 9.9-11.3 27.1-23.6-9.8c-5.3-2.3-8.9-5.8-11.6-9.8-2.6-4-4.6-9.6-4.6-17V148.5h27.3zM609.5 212c4.2-1.4 8.6-2.1 13.3-2.1 20.3 0 37.1 14.4 41 33.5l28.7-5.9c-6.6-32.5-35.3-56.9-69.7-56.9-7.9 0-15.5 1.3-22.5 3.6l9.2 27.8zm-33.9 92.9L595 283c-8.7-7.7-14.1-18.9-14.1-31.4s5.5-23.7 14.1-31.3l-19.4-21.9c-14.7 13-24 32.1-24 53.3 0 21.2 9.3 40.2 24 53.2zm88.2-44.8c-3.9 19.1-20.8 33.5-41 33.5-4.6 0-9.1-.8-13.3-2.2l-9.3 27.8c7.1 2.4 14.7 3.7 22.6 3.7 34.4 0 63.1-24.4 69.7-56.9l-28.7-5.9z\"/></g></g></svg>";

    var hipercard = "<svg width=\"750\" height=\"471\" viewBox=\"0 0 750 471\" xmlns=\"http://www.w3.org/2000/svg\"><g fill-rule=\"nonzero\" fill=\"none\"><path d=\"M697.115 0H52.885C23.724 0 0 23.196 0 51.707v367.586C0 447.804 23.724 471 52.885 471h644.23C726.274 471 750 447.804 750 419.293V51.707C750 23.196 726.274 0 697.115 0z\" fill=\"#FFF\"/><path d=\"M321.004 378.44L47 378.54v-.66c0-.363.437-2.714.97-5.226.535-2.511 1.365-6.507 1.847-8.877.48-2.372 1.303-6.4 1.826-8.955a3823.979 3823.979 0 0 0 3.815-18.735c.494-2.463 1.317-6.493 1.831-8.955a2558.2 2558.2 0 0 0 1.948-9.45c.557-2.736 1.403-6.915 1.881-9.287a794.28 794.28 0 0 1 1.688-8.123 271.84 271.84 0 0 0 1.275-6.302c.251-1.368 1.065-5.397 1.808-8.954a730.47 730.47 0 0 0 1.822-8.953c.26-1.369 1.082-5.398 1.83-8.955.747-3.555 1.568-7.585 1.824-8.953.256-1.368 1.081-5.398 1.833-8.954.754-3.557 1.566-7.511 1.805-8.788.241-1.277.9-4.56 1.464-7.295.563-2.736 1.63-7.885 2.37-11.441.741-3.558 2.007-9.75 2.813-13.764.809-4.012 1.773-8.787 2.145-10.61a4107.793 4107.793 0 0 1 3.31-16.084c.549-2.646 1.441-6.973 1.983-9.618a3528.87 3528.87 0 0 0 1.858-9.12c.48-2.37 1.297-6.325 1.817-8.787.52-2.463 1.416-6.79 1.99-9.618a306.964 306.964 0 0 1 2.135-9.617c.6-2.462 1.45-5.447 1.887-6.632.437-1.186 1.645-3.755 2.684-5.711l1.888-3.555 1.717-2.249c.943-1.235 2.629-3.19 3.745-4.34 1.116-1.152 2.997-2.885 4.184-3.85 1.185-.967 2.902-2.272 3.813-2.899.912-.627 2.703-1.726 3.98-2.441 1.276-.716 3.069-1.652 3.98-2.081.912-.43 2.778-1.215 4.145-1.743 1.368-.528 3.98-1.415 5.803-1.968 1.824-.555 5.248-1.39 7.609-1.857 2.361-.466 6.09-1.09 8.29-1.385l3.999-.538 274.17-.103L702.95 93v.66c0 .362-.44 2.714-.976 5.225-.539 2.511-1.437 6.805-1.997 9.54-.561 2.736-1.378 6.692-1.818 8.789-.439 2.098-1.27 6.127-1.848 8.953-.577 2.828-1.465 7.156-1.973 9.618-.508 2.462-1.331 6.492-1.829 8.953-.497 2.463-1.325 6.492-1.838 8.955-.516 2.462-1.312 6.343-1.772 8.622-.461 2.28-1.294 6.383-1.852 9.12a1955.06 1955.06 0 0 1-1.992 9.616c-.538 2.554-1.356 6.509-1.819 8.789l-1.853 9.119c-.556 2.736-1.45 7.064-1.988 9.618-.537 2.553-1.338 6.433-1.78 8.622a8069.947 8069.947 0 0 1-3.704 18.24c-.45 2.187-1.25 6.068-1.78 8.62-.531 2.554-1.439 6.957-2.015 9.784-.58 2.827-1.407 6.855-1.84 8.954-.434 2.096-1.244 6.052-1.802 8.787-.557 2.737-1.445 7.064-1.973 9.618-.527 2.553-1.353 6.583-1.837 8.954-.482 2.37-1.322 6.475-1.864 9.12-.545 2.643-1.432 6.971-1.973 9.615-.542 2.646-1.352 6.6-1.803 8.79a4228.93 4228.93 0 0 0-1.828 8.953 911.017 911.017 0 0 1-2.01 9.581l-.998 4.606-1.19 3.187c-.653 1.752-1.637 4.082-2.186 5.177-.547 1.093-1.663 3.025-2.479 4.29-.817 1.266-1.955 2.887-2.528 3.603-.574.716-2.302 2.566-3.842 4.111l-2.795 2.807-2.692 1.912c-1.48 1.052-3.075 2.122-3.543 2.377-.468.256-2.252 1.167-3.963 2.023-1.711.858-4.13 1.948-5.372 2.423-1.243.477-3.705 1.287-5.472 1.8-1.766.516-3.66 1.023-4.206 1.127-.548.105-2.446.498-4.221.874-1.774.376-5.355.937-7.958 1.247l-4.734.564-274.003.097zm-97.486-70.874h7.13l.2-.525c.113-.289.203-.967.203-1.507 0-.541.235-2.505.523-4.366.286-1.863.96-6.146 1.497-9.52.537-3.375 1.34-8.449 1.785-11.275.446-2.828.99-6.447 1.21-8.043.22-1.596.486-2.9.594-2.9.107 0 .568.704 1.024 1.566l.828 1.567 1.838 1.853 1.84 1.851 2.262.907 2.263.905 2.697.35 2.698.35 3.422-.21 3.423-.21 3.707-.96 3.707-.96 1.99-.906c1.094-.5 3.034-1.59 4.31-2.421l2.322-1.512 2.164-2.164c1.19-1.188 2.87-3.097 3.73-4.24.863-1.141 1.568-2.159 1.568-2.26 0-.102.424-.809.94-1.572.518-.762 1.576-2.88 2.352-4.703.778-1.824 1.99-5.107 2.698-7.295l1.285-3.98.665-3.447c.365-1.895.836-5.029 1.045-6.964l.38-3.517-.22-2.984-.22-2.985-.692-2.985-.69-2.985-1.122-2.233-1.12-2.235-2.164-2.294-2.163-2.294-2.56-1.323-2.56-1.322-2.819-.677-2.819-.674-2.819-.206-2.818-.207-3.14.36-3.14.361-2.563.655-2.562.653-2.227 1.032c-1.224.565-3.007 1.528-3.96 2.138-.953.61-1.937 1.311-2.185 1.56-.248.247-.844.707-1.322 1.018l-.871.571.608-2.913c.336-1.602.615-3.099.623-3.328l.013-.414h-12.16l-1.065 6.716c-.587 3.694-1.513 9.4-2.058 12.685a5718.93 5718.93 0 0 1-3.65 21.72c-.542 3.191-1.438 8.266-1.991 11.276-.554 3.01-1.364 7.412-1.802 9.783-.437 2.37-1.261 6.847-1.83 9.947-.567 3.103-1.481 8.026-2.03 10.945-.55 2.918-1.441 7.544-1.984 10.28-.543 2.736-1.067 5.311-1.167 5.72l-.181.747h7.13zm30.696-38.342l-2.768.167-1.81-.32-1.81-.32-1.838-.839-1.838-.84-1.284-1.226-1.284-1.225-.741-1.658c-.408-.913-.932-2.462-1.164-3.444l-.423-1.784.17-2.858.17-2.858.854-4.477c.47-2.462 1.313-7.089 1.874-10.28.561-3.192 1.413-7.87 1.89-10.394l.867-4.59 1.901-1.581c1.046-.87 2.703-2.036 3.682-2.591l1.778-1.01 2.321-.718 2.322-.72 2.985-.174 2.984-.175 2.431.518 2.43.518 1.715.79 1.715.79 1.438 1.445 1.44 1.446.774 1.531c.427.843 1.027 2.49 1.332 3.663l.556 2.131-.17 6.302-.17 6.3-.852 3.725c-.468 2.049-1.36 5.183-1.981 6.964l-1.13 3.24-1.384 2.622c-.761 1.443-1.935 3.392-2.608 4.332-.673.939-1.747 2.158-2.386 2.705a52.14 52.14 0 0 1-2.375 1.905l-1.216.908-2.814.957-2.814.957-2.769.166zm68.862 9.117l3.648.042 3.648-.333c2.007-.183 5.29-.564 7.295-.847 2.007-.283 5.473-.916 7.703-1.405l4.053-.892.203-1.496c.111-.821.566-3.268 1.012-5.436l.81-3.945-.18-.178-.178-.178-1.24.598c-.68.329-2.805 1.115-4.717 1.745l-3.48 1.146-3.65.708-3.651.707-5.804.012-5.804.01-1.99-.635c-1.094-.349-2.703-.988-3.576-1.421l-1.586-.785-1.31-1.184-1.31-1.184-1.023-1.785-1.022-1.787-.64-2.24-.642-2.24-.003-4.147-.005-4.147.568-3.698.57-3.7 4.99-.233 4.99-.234 18.447.12 18.446.118.557-2.362c.307-1.3.775-3.986 1.041-5.97l.484-3.607.01-3.033.011-3.034-.525-2.266-.526-2.264-.869-1.5c-.476-.824-1.319-2.019-1.87-2.656-.55-.636-1.534-1.533-2.186-1.993-.652-.46-1.93-1.233-2.843-1.718l-1.658-.882-2.896-.698-2.898-.697-3.569-.341-3.57-.342-3.316.216-3.316.215-3.98.764-3.98.765-2.487.994c-1.368.546-3.457 1.544-4.642 2.217-1.186.672-2.827 1.766-3.647 2.43-.823.666-2.244 1.959-3.159 2.874-.916.916-2.272 2.56-3.011 3.654-.74 1.095-1.874 3.034-2.522 4.31-.646 1.278-1.489 3.069-1.872 3.98-.383.912-1.08 2.778-1.547 4.145-.469 1.369-1.204 3.98-1.635 5.805a109.124 109.124 0 0 0-1.313 6.67l-.528 3.357.005 4.935.005 4.934.504 2.156c.276 1.185.807 2.977 1.177 3.98.37 1.003 1.057 2.495 1.524 3.316.466.82 1.465 2.142 2.216 2.937.752.794 2.114 2 3.026 2.678.911.68 2.535 1.634 3.607 2.122l1.95.887 2.718.658c1.495.36 3.752.79 5.015.952 1.262.162 3.937.314 5.943.336zm6.246-46.717c-9.18 0-16.692-.065-16.692-.146 0-.08.392-1.237.871-2.57.478-1.334 1.32-3.317 1.868-4.41l.999-1.985 2.193-2.182 2.193-2.183 2.157-1.03c1.185-.567 2.752-1.185 3.48-1.372.731-.187 2.82-.436 4.643-.552l3.318-.213 2.547.328 2.546.327 1.85.847 1.851.847 1.016 1.095c.558.602 1.223 1.488 1.478 1.97l.463.875.306 1.943.307 1.944-.35 3.233-.35 3.234h-16.694zm99.213 46.718l3.65.04 4.142-.49c2.28-.27 5.313-.717 6.742-.995a76.861 76.861 0 0 0 5.14-1.22c1.398-.397 2.663-.824 2.812-.95.148-.127.542-1.633.877-3.345.335-1.712.758-4.009.938-5.103.18-1.095.274-2.048.208-2.12-.067-.072-.31.021-.543.205-.234.185-1.86.87-3.617 1.522l-3.193 1.186-4.547.88-4.548.881-3.865-.13-3.866-.133-2.197-.762-2.196-.762-1.697-1.483-1.696-1.485-1.127-2.05-1.124-2.05-.538-2.743-.535-2.743.004-3.557.002-3.558.652-4.311.652-4.312.688-2.322c.38-1.277.81-2.768.954-3.315.146-.548.753-2.115 1.352-3.483.598-1.368 1.665-3.482 2.37-4.698l1.284-2.21 1.577-1.635 1.577-1.634 1.668-1.034 1.67-1.036 2.145-.66c1.179-.364 3.264-.836 4.631-1.048l2.487-.388 3.648.183 3.648.183 4.31.864 4.312.861 1.753.654c.964.36 1.795.655 1.848.655.05 0 .282-1.231.513-2.737.232-1.504.643-3.98.914-5.5.273-1.522.43-2.833.349-2.912-.08-.08-1.376-.286-2.879-.457-1.504-.171-5.591-.475-9.082-.677l-6.35-.364-4.476.343-4.477.344-3.317.696-3.315.697-2.137.854c-1.174.47-2.894 1.318-3.823 1.884a60.66 60.66 0 0 0-2.625 1.693c-.516.365-2.08 1.788-3.479 3.163l-2.539 2.5-1.419 2.077c-.78 1.143-2.127 3.524-2.997 5.294l-1.58 3.217-1.211 3.48c-.666 1.916-1.596 5.05-2.066 6.965l-.855 3.483-.311 3.15-.31 3.15.003 4.146.004 4.145.312 2.411.313 2.412.994 2.48.992 2.481 1.149 1.793 1.146 1.793 1.824 1.796 1.825 1.795 1.93 1.021 1.93 1.02 2.535.704c1.393.387 3.408.831 4.476.987 1.068.156 3.584.302 5.593.324h-.006zm54.55-.122l4.476-.129 2.819-.721 2.819-.722 1.824-.862c1.003-.473 2.644-1.41 3.648-2.08 1.003-.67 2.557-1.944 3.45-2.83.895-.888 2.221-2.4 2.948-3.362.727-.963 1.365-1.707 1.419-1.653.055.054-.114 1.587-.372 3.407-.257 1.822-.471 4.244-.475 5.384l-.006 2.072h12.172l.187-4.724.185-4.726.869-6.136c.478-3.374 1.25-8.374 1.715-11.109.465-2.736 1.273-7.361 1.797-10.28.523-2.92 1.352-7.47 1.84-10.115l.892-4.808.03-4.153.03-4.154-.939-1.92-.94-1.92-1.272-1.222-1.275-1.223-2.09-1.059-2.091-1.06-3.116-.693-3.117-.694-4.29-.326-4.29-.326-5.527.342c-3.04.188-7.317.559-9.506.826l-3.98.482-2.712.01-2.712.01-.395 1.908c-.217 1.049-.82 3.54-1.34 5.537-.521 1.997-.898 3.678-.838 3.737.058.06 1.509-.27 3.222-.731 1.714-.462 5.355-1.22 8.092-1.686l4.974-.847 4.476-.184 4.477-.185 2.884.505 2.884.506 1.925.95 1.924.95 1.078 1.607 1.079 1.606-.015 2.532-.017 2.533-.57 2.779-.572 2.78-11.933.043-11.932.042-3.905 1.07c-2.147.59-4.526 1.372-5.285 1.738-.76.368-1.518.668-1.688.668-.168 0-1.446.707-2.839 1.575l-2.532 1.573-1.994 1.99c-1.098 1.096-2.499 2.738-3.114 3.65-.616.911-1.618 2.816-2.224 4.233l-1.103 2.576-.507 2.895-.507 2.897v6.077l.483 2.53.485 2.53.897 1.65c.494.906 1.402 2.236 2.015 2.953l1.117 1.304 1.982 1.205 1.983 1.205 2.271.642c1.25.353 3.15.781 4.224.951l1.953.308 4.477-.128h-.003zm4.145-9.274l-2.654.14-1.757-.449c-.965-.245-2.432-.794-3.259-1.219l-1.5-.772-.82-.974c-.45-.537-1.14-1.588-1.53-2.34l-.711-1.365-.139-3.187-.14-3.188.562-1.934c.309-1.063 1.035-2.91 1.612-4.101l1.05-2.168 2.011-1.996 2.01-1.996 2.135-1.028 2.134-1.028 2.653-.63 2.654-.63h16.581l.524.216.524.216-.44 2.603c-.243 1.43-.822 4.02-1.288 5.752-.464 1.734-1.285 4.28-1.823 5.66-.539 1.381-.98 2.602-.98 2.712 0 .112-.545 1.117-1.211 2.235l-1.21 2.034-1.989 1.971c-1.093 1.083-2.11 1.97-2.257 1.97-.146 0-.816.373-1.488.83l-1.223.827-2.69.851-2.689.85-2.652.138zm107.943 9.392l3.15.04 2.985-.485c1.642-.266 3.73-.695 4.643-.953.911-.259 2.554-.928 3.647-1.488l1.99-1.02 1.713-1.507 1.71-1.507 1.804-2.403c.992-1.323 1.889-2.628 1.995-2.902l.192-.499-.167 1.66a54.148 54.148 0 0 1-.46 3.316c-.16.912-.389 2.665-.51 3.897l-.22 2.237h13.012v-4.476l.99-8.457c.546-4.651 1.352-10.843 1.792-13.762.44-2.92 1.12-7.096 1.51-9.285.39-2.19 1.081-6.144 1.534-8.788.456-2.644 1.276-7.272 1.825-10.28.548-3.01 1.427-7.785 1.952-10.612l1.812-9.784c.471-2.553 1.317-7.03 1.878-9.948a704.51 704.51 0 0 1 1.823-9.12c.441-2.097.802-3.926.801-4.062v-.25h-14.195l-.21 2.074c-.114 1.14-.658 4.907-1.206 8.374-.549 3.464-1.444 8.986-1.99 12.269-.544 3.283-1.068 6.467-1.165 7.075l-.178 1.106-.56-.238c-.307-.131-1.978-.595-3.71-1.03l-3.15-.791-4.31-.336-4.312-.335-3.648.339-3.647.34-3.317.84-3.316.837-3.15 1.537-3.152 1.536-2.32 1.718-2.322 1.718-2.005 2.15c-1.103 1.183-2.695 3.138-3.54 4.346l-1.534 2.196-1.804 3.75c-.99 2.064-2.197 4.796-2.68 6.072-.484 1.278-1.335 4.108-1.894 6.29l-1.015 3.968-.5 5.153-.5 5.15.375 4.146.376 4.145.443 1.492c.246.821.76 2.283 1.145 3.25l.7 1.758 1.276 1.727 1.278 1.729 1.457 1.193 1.458 1.195 1.99.988c1.095.543 2.93 1.245 4.08 1.56 1.148.315 3.013.693 4.145.84 1.13.147 3.472.286 5.206.307zm5.654-9.407l-2.504.13-1.69-.303c-.929-.167-2.416-.616-3.305-.997l-1.615-.691-1.36-1.115-1.359-1.113-1.01-1.935-1.01-1.934-.461-2.156-.46-2.156.04-4.31.038-4.312.535-3.814.534-3.813.831-2.653c.457-1.459.834-2.836.836-3.06.004-.223.453-1.416 1.003-2.652a89.832 89.832 0 0 1 2.037-4.237c.572-1.095 1.64-2.8 2.374-3.79.736-.991 2.045-2.484 2.91-3.318.864-.832 2.238-1.926 3.056-2.428l1.484-.913 2.607-.903 2.607-.902 5.472-.003h5.472l3.15.875c1.733.48 3.573 1.037 4.089 1.238l.938.364-.183.91c-.1.502-.495 2.702-.876 4.89-.38 2.19-1.132 6.368-1.668 9.287-.537 2.918-1.361 7.32-1.833 9.782-.47 2.463-1.152 5.596-1.515 6.964a457.836 457.836 0 0 1-1.138 4.21c-.263.948-.889 2.59-1.39 3.648-.503 1.059-1.382 2.597-1.953 3.417-.572.82-1.538 1.959-2.148 2.527-.611.57-1.93 1.58-2.934 2.246l-1.824 1.212-2.636.837-2.637.837-2.504.134zm-488.066 7.793h8.056l.579-3.564c.317-1.96.939-5.73 1.38-8.374l1.823-10.943c.563-3.375 1.406-8.374 1.874-11.11.467-2.735 1.211-6.979 1.651-9.43.441-2.453.886-4.541.987-4.644l.187-.185h43.331l.241.24.241.24-.377 1.915c-.205 1.054-.816 4.303-1.357 7.221-.54 2.919-1.448 7.843-2.02 10.945-.568 3.1-1.393 7.503-1.83 9.782a1289.35 1289.35 0 0 0-1.968 10.612c-.643 3.556-1.17 6.653-1.167 6.881l.004.414h16.18l.358-2.072c.198-1.14.514-3.192.705-4.56.19-1.368.65-4.279 1.02-6.467.37-2.187 1.109-6.517 1.643-9.617.534-3.1 1.429-8.398 1.987-11.772.559-3.375 1.387-8.299 1.842-10.943a711.931 711.931 0 0 1 1.798-9.95 2821.88 2821.88 0 0 0 1.98-10.612c.555-3.008 1.384-7.56 1.845-10.114.461-2.553 1.3-7.18 1.867-10.28.566-3.1 1.28-6.719 1.587-8.042l.559-2.404h-16.384l-.223 1.576c-.121.865-.517 3.291-.879 5.388a1576.67 1576.67 0 0 1-1.46 8.29c-.442 2.463-1.249 7.163-1.794 10.447a784.292 784.292 0 0 0-1.543 9.658l-.553 3.688-12.025.244-12.026.243-10.072-.24c-5.54-.13-10.103-.265-10.141-.296-.037-.032.151-1.32.419-2.864a262.12 262.12 0 0 1 1.127-5.956c.352-1.733 1.02-5.165 1.482-7.629.464-2.461.988-5.52 1.167-6.797a84.57 84.57 0 0 1 .83-4.727c.278-1.321.806-4.107 1.174-6.189.366-2.081.757-4.022.869-4.31l.2-.526H121.685l-.52 2.902a231.194 231.194 0 0 0-.848 5.057c-.18 1.185-.786 4.99-1.345 8.456-.56 3.465-1.386 8.614-1.836 11.44-.45 2.828-1.27 7.977-1.82 11.442a700.908 700.908 0 0 1-2.023 11.938c-.56 3.102-1.373 7.503-1.805 9.783-.431 2.28-1.253 6.608-1.826 9.617a840.991 840.991 0 0 1-1.86 9.452c-.45 2.188-.946 4.725-1.103 5.636-.159.913-.671 3.543-1.142 5.846-.47 2.303-.854 4.429-.854 4.726v.538h8.059zm89.199 0h7.133l.2-.524c.112-.29.202-1.046.202-1.68 0-.638.45-3.946.997-7.353a2950.858 2950.858 0 0 1 3.848-23.273c.45-2.644 1.25-7.046 1.777-9.784a2436.17 2436.17 0 0 0 1.802-9.45 1195.97 1195.97 0 0 1 2.022-10.41c.649-3.264 1.26-6.064 1.36-6.224l.18-.292-7.213.09-7.213.088-.603 4.312a535.526 535.526 0 0 1-1.604 10.445c-.552 3.375-1.388 8.525-1.857 11.441a493.02 493.02 0 0 1-1.817 10.447l-1.808 9.617c-.462 2.463-1.293 6.79-1.846 9.617a1286.42 1286.42 0 0 1-1.648 8.29c-.355 1.734-.734 3.487-.845 3.898l-.2.745h7.133zm166.83 0h7.081l.212-2.996c.118-1.646.518-4.967.89-7.378.374-2.41 1.138-7.218 1.697-10.683.56-3.466 1.6-9.234 2.312-12.82.714-3.583 1.518-7.147 1.79-7.916.272-.771.494-1.605.494-1.855s.533-1.612 1.183-3.026c.65-1.414 1.863-3.58 2.695-4.812l1.511-2.242 2.023-1.874 2.023-1.872 2.495-1.192 2.495-1.192 3.815.02 3.812.02 1.876.56c1.03.308 1.963.56 2.072.56.109 0 .198-.351.198-.783 0-.43.373-2.614.829-4.854.455-2.238.829-4.164.829-4.28 0-.116-1.082-.54-2.404-.94-1.323-.402-3.15-.823-4.062-.937l-1.658-.205-2.156.382c-1.186.21-2.948.672-3.917 1.029-.97.356-2.57 1.163-3.556 1.794-.986.632-2.52 1.862-3.41 2.733-.89.872-2.385 2.63-3.323 3.907-.94 1.277-1.92 2.62-2.181 2.985l-.475.662.288-1.325c.159-.73.6-3.118.981-5.306.38-2.19.774-4.242.87-4.56l.176-.581H373.65v.8c0 .44-.374 3.087-.83 5.885-.456 2.799-1.208 7.475-1.671 10.394-.463 2.918-1.285 7.992-1.826 11.275a572.387 572.387 0 0 1-1.828 10.445 2317.56 2317.56 0 0 1-3.83 19.898c-.558 2.828-1.227 6.166-1.484 7.42-.259 1.253-.47 2.41-.47 2.569v.291h7.08zm168.074 0h7.239v-4.431l.834-5.495c.46-3.02 1.216-7.808 1.683-10.633a1372.56 1372.56 0 0 0 1.29-7.96c.246-1.55.892-4.908 1.438-7.461.548-2.554 1.23-5.314 1.518-6.136.288-.82.525-1.682.528-1.913.003-.232.62-1.721 1.37-3.31l1.367-2.892 1.804-2.395 1.802-2.394 1.973-1.484c1.085-.816 2.83-1.898 3.878-2.406l1.905-.922 4.144.028 4.146.03 1.632.523 1.631.524.276-.17.274-.17.016-1.058c.006-.582.361-2.747.788-4.813l.775-3.754-.872-.342a51.307 51.307 0 0 0-2.53-.862l-1.658-.523-2.984.008-2.985.007-2.432.857-2.433.855-1.827 1.101-1.825 1.102-2.375 2.487-2.375 2.487-1.276 1.93c-.7 1.06-1.318 1.881-1.372 1.823-.053-.057.328-2.27.847-4.913.52-2.645.952-5.145.96-5.555l.014-.747h-12.27v.212c0 .116-.306 2.242-.68 4.725a1358.83 1358.83 0 0 1-1.668 10.65c-.544 3.374-1.435 8.82-1.982 12.104a646.012 646.012 0 0 1-1.831 10.447c-.46 2.461-1.278 6.79-1.817 9.616-.54 2.828-1.425 7.38-1.968 10.115-.543 2.735-1.264 6.355-1.6 8.042l-.612 3.066h7.24zm-320.878-80.922l2.012.007 1.601-.545 1.602-.545 1.416-1.438 1.417-1.436.745-1.915.747-1.915.026-2.819.027-2.817-.663-1.102-.664-1.1-1.154-.715-1.155-.715h-4.986l-1.697.76-1.698.76-.985 1.055-.985 1.057-.774 1.823-.774 1.824-.146 2.841-.146 2.841.72 1.413.72 1.411 1.391.631 1.39.63 2.013.009z\" fill=\"#B3131B\"/></g></svg>";

    var AfdCard =
    /*#__PURE__*/
    function (_afdValidationMixin) {
      inherits(AfdCard, _afdValidationMixin);

      function AfdCard(_element, _options) {
        var _this;

        classCallCheck(this, AfdCard);

        _this = possibleConstructorReturn(this, getPrototypeOf(AfdCard).call(this, _element, _options));

        defineProperty(assertThisInitialized(assertThisInitialized(_this)), "init", function () {
          _this.$expiryElement = $$1('[data-afd-control="expiry"]');

          _this.$element.data('card-is-afd-valid', false);

          _this.$expiryElement.data('expiry-is-regex-valid', false);

          _this.$expiryElement.data('expiry-is-syntax-valid', false);

          var event = _this.eventHandler;
          event(_this.$element, 'keydown', _this.onKeyDown);
          event(_this.$element, 'keyup', _this.onKeyUp);
          event(_this.$element, 'focusout', _this.onFocusOut);
          event(_this.$expiryElement, 'keydown', _this.onExpiryKeyDown);
          event(_this.$expiryElement, 'keyup', _this.onExpiryKeyUp);
          event(_this.$expiryElement, 'focusout', _this.onExpiryFocusOut);
          $$1('.afd-card-logo').html(blankCard).find('svg').attr('height', _this.options.card.logoHeight).attr('width', _this.options.card.logoWidth);
        });

        defineProperty(assertThisInitialized(assertThisInitialized(_this)), "onKeyDown", function (e) {
          // only allow number input
          if ((e.keyCode < 48 || e.keyCode > 57) && ( // top number
          e.keyCode < 96 || e.keyCode > 105) && ( // keypad
          e.keyCode < 112 || e.keyCode > 123) && // F keys
          _this.utilKeys.indexOf(e.keyCode) === -1) {
            e.preventDefault();
          }
        });

        defineProperty(assertThisInitialized(assertThisInitialized(_this)), "onKeyUp", function () {
          var $element = _this.$element;
          var card = $element.val();
          var regexValid = cardValidator_1(card); // See if we can get the card type from the numbers we have

          if (regexValid.card !== null) {
            // if it could be a correct card and we can get the cardtype
            $element.data('card-type', regexValid.card.type);
            $element.data('card-type-nice', regexValid.card.niceType);
            var cardLogo = blankCard;

            switch (regexValid.card.type) {
              case 'visa':
                cardLogo = visa;
                break;

              case 'mastercard':
                cardLogo = mastercard;
                break;

              case 'american-express':
                cardLogo = amex;
                break;

              case 'diners-club':
                cardLogo = diners;
                break;

              case 'discover':
                cardLogo = discover;
                break;

              case 'jcb':
                cardLogo = jcb;
                break;

              case 'unionpay':
                cardLogo = unionpay;
                break;

              case 'maestro':
                cardLogo = maestro;
                break;

              case 'elo':
                cardLogo = elo;
                break;

              case 'hipercard':
                cardLogo = hipercard;
                break;

              default:

            }

            $$1('.afd-card-logo').html(cardLogo).find('svg').attr('height', _this.options.card.logoHeight).attr('width', _this.options.card.logoWidth);
          }

          if (regexValid.isValid) {
            _this.handleValid();
          } else {
            _this.clearValidation();
          }

          $element.data('card-is-regex-valid', regexValid.isValid);
          $element.data('card-is-syntax-valid', regexValid.isValid);
          $element.data('card-is-afd-valid', false);
          $$1(document).trigger('afd:cardValidationUpdated', [$element.get()[0], _this.$expiryElement.get()[0]]);
        });

        defineProperty(assertThisInitialized(assertThisInitialized(_this)), "onFocusOut", function () {
          var $element = _this.$element;
          var card = $element.val();
          var regexValid = cardValidator_1(card); // if it is regex valid when we mouse out

          if (regexValid.isValid) {
            _this.checkBoth();
          } else {
            _this.handleInvalid(_this.options.card.invalidCardNumberMessage);
          }
        });

        defineProperty(assertThisInitialized(assertThisInitialized(_this)), "onExpiryKeyDown", function (e) {
          var $element = _this.$expiryElement;
          var expiry = $element.val(); // only allow number input

          if ((e.keyCode < 48 || e.keyCode > 57) && ( // top number
          e.keyCode < 96 || e.keyCode > 105) && ( // keypad
          e.keyCode < 112 || e.keyCode > 123) && // F keys
          _this.utilKeys.indexOf(e.keyCode) === -1) {
            e.preventDefault();
          }

          if (expiry.length > 9 && e.keyCode !== 37 && // left arrow
          e.keyCode !== 39 && // right arrow
          e.keyCode !== 8 && // backspace
          e.keyCode !== 46 // delete
          ) {
              e.preventDefault();
            }

          if (expiry.length === 2 && //if there are two characters
          !cardValidator_3(expiry).isValid && // that are not valid months
          [8, 46, 37, 39].indexOf(e.keyCode) === -1 //and the keys pressed are not delete or backspace or arrows
          ) {
              e.preventDefault(); // prevent further input
            } // prevent the input of other characters if the length of the string is longer than 4


          if (_this.keyupVal.length > 4 && _this.validSeperators.indexOf(e.key) > -1) {
            e.preventDefault();
          } // if the length of the string is 5, this means there is a month followed by ' / '
          // This makes it so that when you press backspace from the end of the sting you delete all three characters at once


          if (_this.keyupVal.length === 5 && e.keyCode === 8) {
            $element.val(_this.keyupVal.replace(' / ', ''));
            e.preventDefault();
          }
        });

        defineProperty(assertThisInitialized(assertThisInitialized(_this)), "onExpiryKeyUp", function (e) {
          var $element = _this.$expiryElement;
          var expiry = $element.val().replace(' ', '');
          var dateValid = cardValidator_2(expiry); // validation checks

          if (dateValid.isValid) {
            _this.handleValid($element);
          } else if (expiry.length === 1) {
            _this.clearValidation($element);
          } else if (expiry.length === 2) {
            // what to do if there are two characters in the input
            var firstChar = expiry.substr(0, 1);
            var secondChar = expiry.substr(1, 1);

            if (_this.validSeperators.indexOf(secondChar) > -1) {
              // what to do if the second character is a valid seperator
              var validMonth = cardValidator_3(firstChar);

              if (validMonth.isValid) {
                // is the single digit month valid
                element.val('0' + firstChar + ' / ');
              } else {
                // the two characters cannot be a valid month
                _this.handleInvalid(_this.options.card.invalidExpiryMonthMessage, $element);
              }
            } else {
              // what to do is the second character is a number
              var _validMonth = cardValidator_3(expiry);

              if (_validMonth.isValid && e.keyCode !== 8 && e.keyCode !== 46) {
                // is the two digit month valid?
                $element.val(expiry + ' / ');
              } else if (e.keyCode === 8 || e.keyCode === 46 && _validMonth.isValid) {
                //if we got to two characters via delete/backspace
                _this.clearValidation($element);
              } else {
                _this.handleInvalid(_this.options.card.invalidExpiryMonthMessage, $element);
              }
            }
          } else if (expiry.length === 3) {
            // if after keypress the length is three makre sure that the seperator is formatted properly
            if (_this.validSeperators.indexOf(e.key) > -1) {
              $element.val(expiry.replace(e.key, ' / '));
            }
          } else {
            _this.clearValidation($element);
          }

          _this.keyupVal = $element.val();

          _this.$element.data('card-is-afd-valid', false);

          $element.data('expiry-is-regex-valid', dateValid.isValid);
          $element.data('expiry-is-syntax-valid', dateValid.isValid);
          $$1(document).trigger('afd:cardValidationUpdated', [_this.$element.get()[0], $element.get()[0]]);
        });

        defineProperty(assertThisInitialized(assertThisInitialized(_this)), "onExpiryFocusOut", function (e) {
          var $element = _this.$expiryElement;
          var expiry = $element.val().replace(' ', '');
          var dateValid = cardValidator_2(expiry);

          if (dateValid.isValid) {
            var year = dateValid.year.length === 2 ? '20' + dateValid.year : dateValid.year;
            $element.val(dateValid.month + ' / ' + year); // then do afd check

            _this.checkBoth();
          } else {
            _this.handleInvalid(options.card.invalidExpiryDateMessage, $element);
          }

          _this.$element.data('card-is-afd-valid', false);

          $element.data('expiry-is-regex-valid', dateValid.isValid);
          $element.data('expiry-is-syntax-valid', dateValid.isValid);
          $$1(document).trigger('afd:cardValidationUpdated', [_this.$element.get()[0], $element.get()[0]]);
        });

        defineProperty(assertThisInitialized(assertThisInitialized(_this)), "checkBoth", function () {
          // When we focus out of either card or expiry field we check if both are regex valid and if they are an AFD
          // validation lookup
          var cardElement = $$1('[data-afd-control="card"]');
          var card = cardElement.val();
          var cardValid = cardValidator_1(card);
          var expiryElement = $$1('[data-afd-control="expiry"]');
          var expiry = expiryElement.val().replace(' / ', '/');
          var expiryValid = cardValidator_2(expiry);

          if (cardValid.isValid && expiryValid.isValid) {
            $$1(document).trigger('afd:cardValidationStarted', [cardElement, expiryElement]);

            _this.showLoadingSpinner(cardElement, _this.options.card.loadingSpinner);

            _this.validateCard(card, expiry).then(function (data) {
              // what to do if AFD confirms validation
              if (data.Result === '1') {
                var _data$Item = slicedToArray(data.Item, 1),
                    item = _data$Item[0];

                _this.handleValid();

                _this.handleValid(expiryElement);

                cardElement.data('card-type-nice', item.CardType);
                cardElement.data('card-is-afd-valid', true);
                $$1(document).trigger('afd:cardValidationUpdated', [cardElement.get()[0], expiryElement.get()[0]]);
              } else {
                _this.$element.data('card-is-afd-valid', false);

                handleInvalid(options.card.invalidCardOrExpiryMessage);
              }

              $$1(document).trigger('afd:cardValidationSuccess', [data, cardElement, expiryElement]);

              _this.hideLoadingSpinner(cardElement, _this.options.card.loadingSpinner);
            }).catch(function (err) {
              console.error(err);
              $$1(document).trigger('afd:cardValidationError', [err]);

              _this.hideLoadingSpinner(cardElement, _this.options.card.loadingSpinner);
            });
          }
        });

        _this.utilKeys = [37, // left arrow
        39, // right arrow
        8, // backspace
        46, // delete
        111, // forward slash
        220, // back slash
        109, // dash
        32, // space bar
        9 // tab
        ];
        _this.validSeperators = [' ', '-', '/', '\\'];
        _this.keyupVal = '';
        return _this;
      }

      createClass(AfdCard, [{
        key: "validateCard",
        value: function validateCard(card, expiry) {
          var requestOptions = this.setupParams({
            cardNumber: card,
            expiryDate: expiry,
            data: 'bank',
            task: 'card',
            fields: 'card',
            afdc: this.options.afdc
          });
          return $$1.ajax(requestOptions);
        }
      }]);

      return AfdCard;
    }(afdValidationMixin(AfdControl));

    function initCard () {

      var options = $.extend(true, {}, defaults, afdOptions); // assign account field

      var $card = $(this); // Validate that field is <input>

      if (!$card.is('input')) {
        throw '<' + $card.prop('tagName').toLowerCase() + '> is not a valid tag for `[data-afd-control="card"]`, use <input>';
      } // Assign expiry date field


      var $expiry = $('[data-afd-control="expiry"]'); // Validate that there is only one sort code field on page

      var expiryCount = $expiry.length;

      if (expiryCount === 0) {
        throw 'Could not find an instance of `[data-afd-control="expiry"]`.  This is required for card validation';
      } else if (expiryCount > 1) {
        throw 'More than one instance of `[data-afd-control="expiry"]` found';
      } // Validate that expiry code field is <input>


      if (!$expiry.is('input')) {
        throw '<' + $expiry.prop('tagName').toLowerCase() + '> is not a valid tag for `[data-afd-control="expiry"]`, use <input>';
      } // initialise the control


      var card = new AfdCard($card, options);
      $(document).off('afd:init.afd').on('afd:init.afd', function () {
        card.init();
      });
      card.init();
    }

    var _iterStep = function (done, value) {
      return { value: value, done: !!done };
    };

    var _iterators = {};

    // to indexed object, toObject with fallback for non-array-like ES3 strings


    var _toIobject = function (it) {
      return _iobject(_defined(it));
    };

    var max$1 = Math.max;
    var min$1 = Math.min;
    var _toAbsoluteIndex = function (index, length) {
      index = _toInteger(index);
      return index < 0 ? max$1(index + length, 0) : min$1(index, length);
    };

    // false -> Array#indexOf
    // true  -> Array#includes



    var _arrayIncludes = function (IS_INCLUDES) {
      return function ($this, el, fromIndex) {
        var O = _toIobject($this);
        var length = _toLength(O.length);
        var index = _toAbsoluteIndex(fromIndex, length);
        var value;
        // Array#includes uses SameValueZero equality algorithm
        // eslint-disable-next-line no-self-compare
        if (IS_INCLUDES && el != el) while (length > index) {
          value = O[index++];
          // eslint-disable-next-line no-self-compare
          if (value != value) return true;
        // Array#indexOf ignores holes, Array#includes - not
        } else for (;length > index; index++) if (IS_INCLUDES || index in O) {
          if (O[index] === el) return IS_INCLUDES || index || 0;
        } return !IS_INCLUDES && -1;
      };
    };

    var shared = _shared('keys');

    var _sharedKey = function (key) {
      return shared[key] || (shared[key] = _uid(key));
    };

    var arrayIndexOf = _arrayIncludes(false);
    var IE_PROTO = _sharedKey('IE_PROTO');

    var _objectKeysInternal = function (object, names) {
      var O = _toIobject(object);
      var i = 0;
      var result = [];
      var key;
      for (key in O) if (key != IE_PROTO) _has(O, key) && result.push(key);
      // Don't enum bug & hidden keys
      while (names.length > i) if (_has(O, key = names[i++])) {
        ~arrayIndexOf(result, key) || result.push(key);
      }
      return result;
    };

    // IE 8- don't enum bug keys
    var _enumBugKeys = (
      'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'
    ).split(',');

    // 19.1.2.14 / 15.2.3.14 Object.keys(O)



    var _objectKeys = Object.keys || function keys(O) {
      return _objectKeysInternal(O, _enumBugKeys);
    };

    var _objectDps = _descriptors ? Object.defineProperties : function defineProperties(O, Properties) {
      _anObject(O);
      var keys = _objectKeys(Properties);
      var length = keys.length;
      var i = 0;
      var P;
      while (length > i) _objectDp.f(O, P = keys[i++], Properties[P]);
      return O;
    };

    var document$2 = _global.document;
    var _html = document$2 && document$2.documentElement;

    // 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])



    var IE_PROTO$1 = _sharedKey('IE_PROTO');
    var Empty = function () { /* empty */ };
    var PROTOTYPE$1 = 'prototype';

    // Create object with fake `null` prototype: use iframe Object with cleared prototype
    var createDict = function () {
      // Thrash, waste and sodomy: IE GC bug
      var iframe = _domCreate('iframe');
      var i = _enumBugKeys.length;
      var lt = '<';
      var gt = '>';
      var iframeDocument;
      iframe.style.display = 'none';
      _html.appendChild(iframe);
      iframe.src = 'javascript:'; // eslint-disable-line no-script-url
      // createDict = iframe.contentWindow.Object;
      // html.removeChild(iframe);
      iframeDocument = iframe.contentWindow.document;
      iframeDocument.open();
      iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);
      iframeDocument.close();
      createDict = iframeDocument.F;
      while (i--) delete createDict[PROTOTYPE$1][_enumBugKeys[i]];
      return createDict();
    };

    var _objectCreate = Object.create || function create(O, Properties) {
      var result;
      if (O !== null) {
        Empty[PROTOTYPE$1] = _anObject(O);
        result = new Empty();
        Empty[PROTOTYPE$1] = null;
        // add "__proto__" for Object.getPrototypeOf polyfill
        result[IE_PROTO$1] = O;
      } else result = createDict();
      return Properties === undefined ? result : _objectDps(result, Properties);
    };

    var def = _objectDp.f;

    var TAG = _wks('toStringTag');

    var _setToStringTag = function (it, tag, stat) {
      if (it && !_has(it = stat ? it : it.prototype, TAG)) def(it, TAG, { configurable: true, value: tag });
    };

    var IteratorPrototype = {};

    // 25.1.2.1.1 %IteratorPrototype%[@@iterator]()
    _hide(IteratorPrototype, _wks('iterator'), function () { return this; });

    var _iterCreate = function (Constructor, NAME, next) {
      Constructor.prototype = _objectCreate(IteratorPrototype, { next: _propertyDesc(1, next) });
      _setToStringTag(Constructor, NAME + ' Iterator');
    };

    // 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)


    var IE_PROTO$2 = _sharedKey('IE_PROTO');
    var ObjectProto = Object.prototype;

    var _objectGpo = Object.getPrototypeOf || function (O) {
      O = _toObject(O);
      if (_has(O, IE_PROTO$2)) return O[IE_PROTO$2];
      if (typeof O.constructor == 'function' && O instanceof O.constructor) {
        return O.constructor.prototype;
      } return O instanceof Object ? ObjectProto : null;
    };

    var ITERATOR = _wks('iterator');
    var BUGGY = !([].keys && 'next' in [].keys()); // Safari has buggy iterators w/o `next`
    var FF_ITERATOR = '@@iterator';
    var KEYS = 'keys';
    var VALUES = 'values';

    var returnThis = function () { return this; };

    var _iterDefine = function (Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED) {
      _iterCreate(Constructor, NAME, next);
      var getMethod = function (kind) {
        if (!BUGGY && kind in proto) return proto[kind];
        switch (kind) {
          case KEYS: return function keys() { return new Constructor(this, kind); };
          case VALUES: return function values() { return new Constructor(this, kind); };
        } return function entries() { return new Constructor(this, kind); };
      };
      var TAG = NAME + ' Iterator';
      var DEF_VALUES = DEFAULT == VALUES;
      var VALUES_BUG = false;
      var proto = Base.prototype;
      var $native = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT];
      var $default = $native || getMethod(DEFAULT);
      var $entries = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined;
      var $anyNative = NAME == 'Array' ? proto.entries || $native : $native;
      var methods, key, IteratorPrototype;
      // Fix native
      if ($anyNative) {
        IteratorPrototype = _objectGpo($anyNative.call(new Base()));
        if (IteratorPrototype !== Object.prototype && IteratorPrototype.next) {
          // Set @@toStringTag to native iterators
          _setToStringTag(IteratorPrototype, TAG, true);
          // fix for some old engines
          if (!_library && typeof IteratorPrototype[ITERATOR] != 'function') _hide(IteratorPrototype, ITERATOR, returnThis);
        }
      }
      // fix Array#{values, @@iterator}.name in V8 / FF
      if (DEF_VALUES && $native && $native.name !== VALUES) {
        VALUES_BUG = true;
        $default = function values() { return $native.call(this); };
      }
      // Define iterator
      if ((!_library || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])) {
        _hide(proto, ITERATOR, $default);
      }
      // Plug for library
      _iterators[NAME] = $default;
      _iterators[TAG] = returnThis;
      if (DEFAULT) {
        methods = {
          values: DEF_VALUES ? $default : getMethod(VALUES),
          keys: IS_SET ? $default : getMethod(KEYS),
          entries: $entries
        };
        if (FORCED) for (key in methods) {
          if (!(key in proto)) _redefine(proto, key, methods[key]);
        } else _export(_export.P + _export.F * (BUGGY || VALUES_BUG), NAME, methods);
      }
      return methods;
    };

    // 22.1.3.4 Array.prototype.entries()
    // 22.1.3.13 Array.prototype.keys()
    // 22.1.3.29 Array.prototype.values()
    // 22.1.3.30 Array.prototype[@@iterator]()
    var es6_array_iterator = _iterDefine(Array, 'Array', function (iterated, kind) {
      this._t = _toIobject(iterated); // target
      this._i = 0;                   // next index
      this._k = kind;                // kind
    // 22.1.5.2.1 %ArrayIteratorPrototype%.next()
    }, function () {
      var O = this._t;
      var kind = this._k;
      var index = this._i++;
      if (!O || index >= O.length) {
        this._t = undefined;
        return _iterStep(1);
      }
      if (kind == 'keys') return _iterStep(0, index);
      if (kind == 'values') return _iterStep(0, O[index]);
      return _iterStep(0, [index, O[index]]);
    }, 'values');

    // argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)
    _iterators.Arguments = _iterators.Array;

    _addToUnscopables('keys');
    _addToUnscopables('values');
    _addToUnscopables('entries');

    var ITERATOR$1 = _wks('iterator');
    var TO_STRING_TAG = _wks('toStringTag');
    var ArrayValues = _iterators.Array;

    var DOMIterables = {
      CSSRuleList: true, // TODO: Not spec compliant, should be false.
      CSSStyleDeclaration: false,
      CSSValueList: false,
      ClientRectList: false,
      DOMRectList: false,
      DOMStringList: false,
      DOMTokenList: true,
      DataTransferItemList: false,
      FileList: false,
      HTMLAllCollection: false,
      HTMLCollection: false,
      HTMLFormElement: false,
      HTMLSelectElement: false,
      MediaList: true, // TODO: Not spec compliant, should be false.
      MimeTypeArray: false,
      NamedNodeMap: false,
      NodeList: true,
      PaintRequestList: false,
      Plugin: false,
      PluginArray: false,
      SVGLengthList: false,
      SVGNumberList: false,
      SVGPathSegList: false,
      SVGPointList: false,
      SVGStringList: false,
      SVGTransformList: false,
      SourceBufferList: false,
      StyleSheetList: true, // TODO: Not spec compliant, should be false.
      TextTrackCueList: false,
      TextTrackList: false,
      TouchList: false
    };

    for (var collections = _objectKeys(DOMIterables), i = 0; i < collections.length; i++) {
      var NAME = collections[i];
      var explicit = DOMIterables[NAME];
      var Collection = _global[NAME];
      var proto = Collection && Collection.prototype;
      var key;
      if (proto) {
        if (!proto[ITERATOR$1]) _hide(proto, ITERATOR$1, ArrayValues);
        if (!proto[TO_STRING_TAG]) _hide(proto, TO_STRING_TAG, NAME);
        _iterators[NAME] = ArrayValues;
        if (explicit) for (key in es6_array_iterator) if (!proto[key]) _redefine(proto, key, es6_array_iterator[key], true);
      }
    }

    // getting tag from 19.1.3.6 Object.prototype.toString()

    var TAG$1 = _wks('toStringTag');
    // ES3 wrong here
    var ARG = _cof(function () { return arguments; }()) == 'Arguments';

    // fallback for IE11 Script Access Denied error
    var tryGet = function (it, key) {
      try {
        return it[key];
      } catch (e) { /* empty */ }
    };

    var _classof = function (it) {
      var O, T, B;
      return it === undefined ? 'Undefined' : it === null ? 'Null'
        // @@toStringTag case
        : typeof (T = tryGet(O = Object(it), TAG$1)) == 'string' ? T
        // builtinTag case
        : ARG ? _cof(O)
        // ES3 arguments fallback
        : (B = _cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;
    };

    var _anInstance = function (it, Constructor, name, forbiddenField) {
      if (!(it instanceof Constructor) || (forbiddenField !== undefined && forbiddenField in it)) {
        throw TypeError(name + ': incorrect invocation!');
      } return it;
    };

    // call something on iterator step with safe closing on error

    var _iterCall = function (iterator, fn, value, entries) {
      try {
        return entries ? fn(_anObject(value)[0], value[1]) : fn(value);
      // 7.4.6 IteratorClose(iterator, completion)
      } catch (e) {
        var ret = iterator['return'];
        if (ret !== undefined) _anObject(ret.call(iterator));
        throw e;
      }
    };

    // check on default Array iterator

    var ITERATOR$2 = _wks('iterator');
    var ArrayProto$1 = Array.prototype;

    var _isArrayIter = function (it) {
      return it !== undefined && (_iterators.Array === it || ArrayProto$1[ITERATOR$2] === it);
    };

    var ITERATOR$3 = _wks('iterator');

    var core_getIteratorMethod = _core.getIteratorMethod = function (it) {
      if (it != undefined) return it[ITERATOR$3]
        || it['@@iterator']
        || _iterators[_classof(it)];
    };

    var _forOf = createCommonjsModule(function (module) {
    var BREAK = {};
    var RETURN = {};
    var exports = module.exports = function (iterable, entries, fn, that, ITERATOR) {
      var iterFn = ITERATOR ? function () { return iterable; } : core_getIteratorMethod(iterable);
      var f = _ctx(fn, that, entries ? 2 : 1);
      var index = 0;
      var length, step, iterator, result;
      if (typeof iterFn != 'function') throw TypeError(iterable + ' is not iterable!');
      // fast case for arrays with default iterator
      if (_isArrayIter(iterFn)) for (length = _toLength(iterable.length); length > index; index++) {
        result = entries ? f(_anObject(step = iterable[index])[0], step[1]) : f(iterable[index]);
        if (result === BREAK || result === RETURN) return result;
      } else for (iterator = iterFn.call(iterable); !(step = iterator.next()).done;) {
        result = _iterCall(iterator, f, step.value, entries);
        if (result === BREAK || result === RETURN) return result;
      }
    };
    exports.BREAK = BREAK;
    exports.RETURN = RETURN;
    });

    // 7.3.20 SpeciesConstructor(O, defaultConstructor)


    var SPECIES$1 = _wks('species');
    var _speciesConstructor = function (O, D) {
      var C = _anObject(O).constructor;
      var S;
      return C === undefined || (S = _anObject(C)[SPECIES$1]) == undefined ? D : _aFunction(S);
    };

    // fast apply, http://jsperf.lnkit.com/fast-apply/5
    var _invoke = function (fn, args, that) {
      var un = that === undefined;
      switch (args.length) {
        case 0: return un ? fn()
                          : fn.call(that);
        case 1: return un ? fn(args[0])
                          : fn.call(that, args[0]);
        case 2: return un ? fn(args[0], args[1])
                          : fn.call(that, args[0], args[1]);
        case 3: return un ? fn(args[0], args[1], args[2])
                          : fn.call(that, args[0], args[1], args[2]);
        case 4: return un ? fn(args[0], args[1], args[2], args[3])
                          : fn.call(that, args[0], args[1], args[2], args[3]);
      } return fn.apply(that, args);
    };

    var process = _global.process;
    var setTask = _global.setImmediate;
    var clearTask = _global.clearImmediate;
    var MessageChannel = _global.MessageChannel;
    var Dispatch = _global.Dispatch;
    var counter = 0;
    var queue = {};
    var ONREADYSTATECHANGE = 'onreadystatechange';
    var defer, channel, port;
    var run = function () {
      var id = +this;
      // eslint-disable-next-line no-prototype-builtins
      if (queue.hasOwnProperty(id)) {
        var fn = queue[id];
        delete queue[id];
        fn();
      }
    };
    var listener = function (event) {
      run.call(event.data);
    };
    // Node.js 0.9+ & IE10+ has setImmediate, otherwise:
    if (!setTask || !clearTask) {
      setTask = function setImmediate(fn) {
        var args = [];
        var i = 1;
        while (arguments.length > i) args.push(arguments[i++]);
        queue[++counter] = function () {
          // eslint-disable-next-line no-new-func
          _invoke(typeof fn == 'function' ? fn : Function(fn), args);
        };
        defer(counter);
        return counter;
      };
      clearTask = function clearImmediate(id) {
        delete queue[id];
      };
      // Node.js 0.8-
      if (_cof(process) == 'process') {
        defer = function (id) {
          process.nextTick(_ctx(run, id, 1));
        };
      // Sphere (JS game engine) Dispatch API
      } else if (Dispatch && Dispatch.now) {
        defer = function (id) {
          Dispatch.now(_ctx(run, id, 1));
        };
      // Browsers with MessageChannel, includes WebWorkers
      } else if (MessageChannel) {
        channel = new MessageChannel();
        port = channel.port2;
        channel.port1.onmessage = listener;
        defer = _ctx(port.postMessage, port, 1);
      // Browsers with postMessage, skip WebWorkers
      // IE8 has postMessage, but it's sync & typeof its postMessage is 'object'
      } else if (_global.addEventListener && typeof postMessage == 'function' && !_global.importScripts) {
        defer = function (id) {
          _global.postMessage(id + '', '*');
        };
        _global.addEventListener('message', listener, false);
      // IE8-
      } else if (ONREADYSTATECHANGE in _domCreate('script')) {
        defer = function (id) {
          _html.appendChild(_domCreate('script'))[ONREADYSTATECHANGE] = function () {
            _html.removeChild(this);
            run.call(id);
          };
        };
      // Rest old browsers
      } else {
        defer = function (id) {
          setTimeout(_ctx(run, id, 1), 0);
        };
      }
    }
    var _task = {
      set: setTask,
      clear: clearTask
    };

    var macrotask = _task.set;
    var Observer = _global.MutationObserver || _global.WebKitMutationObserver;
    var process$1 = _global.process;
    var Promise$1 = _global.Promise;
    var isNode = _cof(process$1) == 'process';

    var _microtask = function () {
      var head, last, notify;

      var flush = function () {
        var parent, fn;
        if (isNode && (parent = process$1.domain)) parent.exit();
        while (head) {
          fn = head.fn;
          head = head.next;
          try {
            fn();
          } catch (e) {
            if (head) notify();
            else last = undefined;
            throw e;
          }
        } last = undefined;
        if (parent) parent.enter();
      };

      // Node.js
      if (isNode) {
        notify = function () {
          process$1.nextTick(flush);
        };
      // browsers with MutationObserver, except iOS Safari - https://github.com/zloirock/core-js/issues/339
      } else if (Observer && !(_global.navigator && _global.navigator.standalone)) {
        var toggle = true;
        var node = document.createTextNode('');
        new Observer(flush).observe(node, { characterData: true }); // eslint-disable-line no-new
        notify = function () {
          node.data = toggle = !toggle;
        };
      // environments with maybe non-completely correct, but existent Promise
      } else if (Promise$1 && Promise$1.resolve) {
        // Promise.resolve without an argument throws an error in LG WebOS 2
        var promise = Promise$1.resolve(undefined);
        notify = function () {
          promise.then(flush);
        };
      // for other environments - macrotask based on:
      // - setImmediate
      // - MessageChannel
      // - window.postMessag
      // - onreadystatechange
      // - setTimeout
      } else {
        notify = function () {
          // strange IE + webpack dev server bug - use .call(global)
          macrotask.call(_global, flush);
        };
      }

      return function (fn) {
        var task = { fn: fn, next: undefined };
        if (last) last.next = task;
        if (!head) {
          head = task;
          notify();
        } last = task;
      };
    };

    // 25.4.1.5 NewPromiseCapability(C)


    function PromiseCapability(C) {
      var resolve, reject;
      this.promise = new C(function ($$resolve, $$reject) {
        if (resolve !== undefined || reject !== undefined) throw TypeError('Bad Promise constructor');
        resolve = $$resolve;
        reject = $$reject;
      });
      this.resolve = _aFunction(resolve);
      this.reject = _aFunction(reject);
    }

    var f$1 = function (C) {
      return new PromiseCapability(C);
    };

    var _newPromiseCapability = {
    	f: f$1
    };

    var _perform = function (exec) {
      try {
        return { e: false, v: exec() };
      } catch (e) {
        return { e: true, v: e };
      }
    };

    var navigator = _global.navigator;

    var _userAgent = navigator && navigator.userAgent || '';

    var _promiseResolve = function (C, x) {
      _anObject(C);
      if (_isObject(x) && x.constructor === C) return x;
      var promiseCapability = _newPromiseCapability.f(C);
      var resolve = promiseCapability.resolve;
      resolve(x);
      return promiseCapability.promise;
    };

    var _redefineAll = function (target, src, safe) {
      for (var key in src) _redefine(target, key, src[key], safe);
      return target;
    };

    var SPECIES$2 = _wks('species');

    var _setSpecies = function (KEY) {
      var C = _global[KEY];
      if (_descriptors && C && !C[SPECIES$2]) _objectDp.f(C, SPECIES$2, {
        configurable: true,
        get: function () { return this; }
      });
    };

    var ITERATOR$4 = _wks('iterator');
    var SAFE_CLOSING = false;

    try {
      var riter = [7][ITERATOR$4]();
      riter['return'] = function () { SAFE_CLOSING = true; };
    } catch (e) { /* empty */ }

    var _iterDetect = function (exec, skipClosing) {
      if (!skipClosing && !SAFE_CLOSING) return false;
      var safe = false;
      try {
        var arr = [7];
        var iter = arr[ITERATOR$4]();
        iter.next = function () { return { done: safe = true }; };
        arr[ITERATOR$4] = function () { return iter; };
        exec(arr);
      } catch (e) { /* empty */ }
      return safe;
    };

    var task = _task.set;
    var microtask = _microtask();




    var PROMISE = 'Promise';
    var TypeError$1 = _global.TypeError;
    var process$2 = _global.process;
    var versions = process$2 && process$2.versions;
    var v8 = versions && versions.v8 || '';
    var $Promise = _global[PROMISE];
    var isNode$1 = _classof(process$2) == 'process';
    var empty = function () { /* empty */ };
    var Internal, newGenericPromiseCapability, OwnPromiseCapability, Wrapper;
    var newPromiseCapability = newGenericPromiseCapability = _newPromiseCapability.f;

    var USE_NATIVE = !!function () {
      try {
        // correct subclassing with @@species support
        var promise = $Promise.resolve(1);
        var FakePromise = (promise.constructor = {})[_wks('species')] = function (exec) {
          exec(empty, empty);
        };
        // unhandled rejections tracking support, NodeJS Promise without it fails @@species test
        return (isNode$1 || typeof PromiseRejectionEvent == 'function')
          && promise.then(empty) instanceof FakePromise
          // v8 6.6 (Node 10 and Chrome 66) have a bug with resolving custom thenables
          // https://bugs.chromium.org/p/chromium/issues/detail?id=830565
          // we can't detect it synchronously, so just check versions
          && v8.indexOf('6.6') !== 0
          && _userAgent.indexOf('Chrome/66') === -1;
      } catch (e) { /* empty */ }
    }();

    // helpers
    var isThenable = function (it) {
      var then;
      return _isObject(it) && typeof (then = it.then) == 'function' ? then : false;
    };
    var notify = function (promise, isReject) {
      if (promise._n) return;
      promise._n = true;
      var chain = promise._c;
      microtask(function () {
        var value = promise._v;
        var ok = promise._s == 1;
        var i = 0;
        var run = function (reaction) {
          var handler = ok ? reaction.ok : reaction.fail;
          var resolve = reaction.resolve;
          var reject = reaction.reject;
          var domain = reaction.domain;
          var result, then, exited;
          try {
            if (handler) {
              if (!ok) {
                if (promise._h == 2) onHandleUnhandled(promise);
                promise._h = 1;
              }
              if (handler === true) result = value;
              else {
                if (domain) domain.enter();
                result = handler(value); // may throw
                if (domain) {
                  domain.exit();
                  exited = true;
                }
              }
              if (result === reaction.promise) {
                reject(TypeError$1('Promise-chain cycle'));
              } else if (then = isThenable(result)) {
                then.call(result, resolve, reject);
              } else resolve(result);
            } else reject(value);
          } catch (e) {
            if (domain && !exited) domain.exit();
            reject(e);
          }
        };
        while (chain.length > i) run(chain[i++]); // variable length - can't use forEach
        promise._c = [];
        promise._n = false;
        if (isReject && !promise._h) onUnhandled(promise);
      });
    };
    var onUnhandled = function (promise) {
      task.call(_global, function () {
        var value = promise._v;
        var unhandled = isUnhandled(promise);
        var result, handler, console;
        if (unhandled) {
          result = _perform(function () {
            if (isNode$1) {
              process$2.emit('unhandledRejection', value, promise);
            } else if (handler = _global.onunhandledrejection) {
              handler({ promise: promise, reason: value });
            } else if ((console = _global.console) && console.error) {
              console.error('Unhandled promise rejection', value);
            }
          });
          // Browsers should not trigger `rejectionHandled` event if it was handled here, NodeJS - should
          promise._h = isNode$1 || isUnhandled(promise) ? 2 : 1;
        } promise._a = undefined;
        if (unhandled && result.e) throw result.v;
      });
    };
    var isUnhandled = function (promise) {
      return promise._h !== 1 && (promise._a || promise._c).length === 0;
    };
    var onHandleUnhandled = function (promise) {
      task.call(_global, function () {
        var handler;
        if (isNode$1) {
          process$2.emit('rejectionHandled', promise);
        } else if (handler = _global.onrejectionhandled) {
          handler({ promise: promise, reason: promise._v });
        }
      });
    };
    var $reject = function (value) {
      var promise = this;
      if (promise._d) return;
      promise._d = true;
      promise = promise._w || promise; // unwrap
      promise._v = value;
      promise._s = 2;
      if (!promise._a) promise._a = promise._c.slice();
      notify(promise, true);
    };
    var $resolve = function (value) {
      var promise = this;
      var then;
      if (promise._d) return;
      promise._d = true;
      promise = promise._w || promise; // unwrap
      try {
        if (promise === value) throw TypeError$1("Promise can't be resolved itself");
        if (then = isThenable(value)) {
          microtask(function () {
            var wrapper = { _w: promise, _d: false }; // wrap
            try {
              then.call(value, _ctx($resolve, wrapper, 1), _ctx($reject, wrapper, 1));
            } catch (e) {
              $reject.call(wrapper, e);
            }
          });
        } else {
          promise._v = value;
          promise._s = 1;
          notify(promise, false);
        }
      } catch (e) {
        $reject.call({ _w: promise, _d: false }, e); // wrap
      }
    };

    // constructor polyfill
    if (!USE_NATIVE) {
      // 25.4.3.1 Promise(executor)
      $Promise = function Promise(executor) {
        _anInstance(this, $Promise, PROMISE, '_h');
        _aFunction(executor);
        Internal.call(this);
        try {
          executor(_ctx($resolve, this, 1), _ctx($reject, this, 1));
        } catch (err) {
          $reject.call(this, err);
        }
      };
      // eslint-disable-next-line no-unused-vars
      Internal = function Promise(executor) {
        this._c = [];             // <- awaiting reactions
        this._a = undefined;      // <- checked in isUnhandled reactions
        this._s = 0;              // <- state
        this._d = false;          // <- done
        this._v = undefined;      // <- value
        this._h = 0;              // <- rejection state, 0 - default, 1 - handled, 2 - unhandled
        this._n = false;          // <- notify
      };
      Internal.prototype = _redefineAll($Promise.prototype, {
        // 25.4.5.3 Promise.prototype.then(onFulfilled, onRejected)
        then: function then(onFulfilled, onRejected) {
          var reaction = newPromiseCapability(_speciesConstructor(this, $Promise));
          reaction.ok = typeof onFulfilled == 'function' ? onFulfilled : true;
          reaction.fail = typeof onRejected == 'function' && onRejected;
          reaction.domain = isNode$1 ? process$2.domain : undefined;
          this._c.push(reaction);
          if (this._a) this._a.push(reaction);
          if (this._s) notify(this, false);
          return reaction.promise;
        },
        // 25.4.5.1 Promise.prototype.catch(onRejected)
        'catch': function (onRejected) {
          return this.then(undefined, onRejected);
        }
      });
      OwnPromiseCapability = function () {
        var promise = new Internal();
        this.promise = promise;
        this.resolve = _ctx($resolve, promise, 1);
        this.reject = _ctx($reject, promise, 1);
      };
      _newPromiseCapability.f = newPromiseCapability = function (C) {
        return C === $Promise || C === Wrapper
          ? new OwnPromiseCapability(C)
          : newGenericPromiseCapability(C);
      };
    }

    _export(_export.G + _export.W + _export.F * !USE_NATIVE, { Promise: $Promise });
    _setToStringTag($Promise, PROMISE);
    _setSpecies(PROMISE);
    Wrapper = _core[PROMISE];

    // statics
    _export(_export.S + _export.F * !USE_NATIVE, PROMISE, {
      // 25.4.4.5 Promise.reject(r)
      reject: function reject(r) {
        var capability = newPromiseCapability(this);
        var $$reject = capability.reject;
        $$reject(r);
        return capability.promise;
      }
    });
    _export(_export.S + _export.F * (_library || !USE_NATIVE), PROMISE, {
      // 25.4.4.6 Promise.resolve(x)
      resolve: function resolve(x) {
        return _promiseResolve(_library && this === Wrapper ? $Promise : this, x);
      }
    });
    _export(_export.S + _export.F * !(USE_NATIVE && _iterDetect(function (iter) {
      $Promise.all(iter)['catch'](empty);
    })), PROMISE, {
      // 25.4.4.1 Promise.all(iterable)
      all: function all(iterable) {
        var C = this;
        var capability = newPromiseCapability(C);
        var resolve = capability.resolve;
        var reject = capability.reject;
        var result = _perform(function () {
          var values = [];
          var index = 0;
          var remaining = 1;
          _forOf(iterable, false, function (promise) {
            var $index = index++;
            var alreadyCalled = false;
            values.push(undefined);
            remaining++;
            C.resolve(promise).then(function (value) {
              if (alreadyCalled) return;
              alreadyCalled = true;
              values[$index] = value;
              --remaining || resolve(values);
            }, reject);
          });
          --remaining || resolve(values);
        });
        if (result.e) reject(result.v);
        return capability.promise;
      },
      // 25.4.4.4 Promise.race(iterable)
      race: function race(iterable) {
        var C = this;
        var capability = newPromiseCapability(C);
        var reject = capability.reject;
        var result = _perform(function () {
          _forOf(iterable, false, function (promise) {
            C.resolve(promise).then(capability.resolve, reject);
          });
        });
        if (result.e) reject(result.v);
        return capability.promise;
      }
    });

    function dataDefinition() {
      // prevent the init script from running several times if multiple modules are loaded
      if (typeof window.afdDataInit === 'undefined') {
        window.afdDataInit = false;
      } // Data API definitions


      $(document).ready(function () {
        if (!window.afdDataInit) {
          window.afdDataInit = true;
          $(document).trigger('afd::page_ready');
        }
      }); // Set page_ready listener for data definitions

      $(document).off('afd::page_ready').on('afd::page_ready', function () {
        // Fields that need to perform ajax requests before the rest of the controls can be initialised
        var dependantFields = ['country']; // create an array of promises for dependent requests

        var dependantRequests = []; //First only initialise the controls that other controls are dependant on

        $('[data-afd-control]').each(function () {
          var $this = $(this);
          var controlType = $this.data('afd-control'); // check if this is a control that needs to be initialised before the rest

          if (dependantFields.indexOf(controlType) > -1) {
            // add a new promise to the dependent requests array
            dependantRequests.push(new Promise(function (resolve, reject) {
              initialiseControl($this, controlType, resolve);
            }));
          }
        }); // If there were dependant requests then once they have all completed we can intialise the rest of the controls

        Promise.all(dependantRequests).then(function () {
          // Only do non dependant controls
          $('[data-afd-control]').each(function () {
            var $this = $(this);
            var controlType = $this.data('afd-control');

            if (dependantFields.indexOf(controlType) === -1) {
              initialiseControl($this, controlType, null);
            }
          });
        });
      });
    }

    function initialiseControl(control, controlType, resolve) {
      // activate the module on this element according to the data-afd-control
      try {
        control.afd(controlType, resolve);
      } catch (e) {
        console.error(e);
      }
    }

    window.afdInitScripts = typeof window.afdInitScripts === 'undefined' ? {
      lookupButton: null,
      typeahead: null,
      reverseGeocodeButton: null,
      account: null,
      card: null,
      email: null,
      phone: null,
      country: null
    } : window.afdInitScripts;
    window.afdInitScripts.lookupButton = typeof initLookup !== 'undefined' ? initLookup : window.afdInitScripts.lookupButton ? window.afdInitScripts.lookupButton : null;
    window.afdInitScripts.typeahead = typeof initTypeahead !== 'undefined' ? initTypeahead : window.afdInitScripts.typeahead ? window.afdInitScripts.typeahead : null;
    window.afdInitScripts.reverseGeocodeButton = typeof initReverseGeocode !== 'undefined' ? initReverseGeocode : window.afdInitScripts.reverseGeocodeButton ? window.afdInitScripts.reverseGeocodeButton : null;
    window.afdInitScripts.account = typeof initAccount !== 'undefined' ? initAccount : window.afdInitScripts.account ? window.afdInitScripts.account : null;
    window.afdInitScripts.card = typeof initCard !== 'undefined' ? initCard : window.afdInitScripts.card ? _typeof_1(window.afdInitScripts.card) : null;
    window.afdInitScripts.email = typeof initEmail !== 'undefined' ? initEmail : window.afdInitScripts.email ? window.afdInitScripts.email : null;
    window.afdInitScripts.phone = typeof initPhone !== 'undefined' ? initPhone : window.afdInitScripts.phone ? window.afdInitScripts.phone : null;
    window.afdInitScripts.country = typeof initCountry !== 'undefined' ? initCountry : window.afdInitScripts.country ? window.afdInitScripts.country : null;

    (function ($) {
      // Init plugin so $('selector').afd('control-name') can work
      $.fn.afd = function (controlType, resolve) {
        return this.each(function () {
          //fields that do not need to be initialised
          var nonInitFields = ['lookupField', 'lookupResultsList', 'reverseGeocodeResultsList', 'sort', 'expiry'];

          if (nonInitFields.indexOf(controlType) > -1) {
            return;
          } //If invalid field is supplied


          var validFields = ['typeahead', 'lookupButton', 'country', 'reverseGeocodeButton', 'phone', 'email', 'account', 'card'];

          if (validFields.indexOf(controlType) === -1) {
            throw '`' + controlType + '` is not a valid AFD jQuery control.  Please use one of ' + validFields + ',' + nonInitFields;
          } // if user is trying to init a field that module isn't loaded


          if (!window.afdInitScripts[controlType]) {
            throw 'You are trying to intitialise the control `' + controlType + '` but it seems that you have not loaded this module';
          }

          try {
            window.afdInitScripts[controlType].call(this, controlType, resolve, constructor);
          } catch (err) {
            console.error('Problem initialising AFD Control');
            console.error(err);
          }
        });
      }; // Definitions for `data-afd-control=`


      dataDefinition(); // If this is post render version

      if (typeof postRender !== 'undefined') {
        $(document).ready(function () {
          $(document).trigger('afd::initPostRender');
        });
        $(document).on('afd::initPostRender', function () {
          try {
            if (typeof afdOptions.postRender === 'undefined') {
              throw 'Post Render version of plugin used bit no post render options supplied';
            }

            postRender(afdOptions.postRender);
            $(document).trigger('afd:postRenderInitComplete');
          } catch (e) {
            console.error(e);
          }

          $(document).trigger('afd::page_ready');
        });
      }
    })($$1);

})));
//# sourceMappingURL=afd.card.jquery.1.9.0.min.js.map
